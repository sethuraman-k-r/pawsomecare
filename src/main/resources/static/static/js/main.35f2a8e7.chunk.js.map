{"version":3,"sources":["hoc-components/error/Error.module.css","store/actionTypes.ts","store/reducers/auth.ts","store/reducers/profile.ts","store/reducers/menu.ts","store/reducers/sidebar.ts","store/reducers/index.ts","store/store.js","hoc-components/UI/backdrop/Backdrop.tsx","store/actions.ts","services/auth.services.ts","components/login/Login.tsx","config/UrlRoute.ts","utils/array.utils.ts","hoc-components/error/Error.tsx","hoc-components/guard/GuardedRoute.tsx","components/signup/Signup.tsx","services/http.services.ts","hoc-components/UI/adminlayout/AdminLayout.tsx","hoc-components/UI/modal/Modal.tsx","hoc-components/UI/datalist/DataList.tsx","components/admin/petcategory/PetCategory.tsx","components/admin/petgrooming/PetGrooming.tsx","components/admin/petvaccine/PetVaccine.tsx","components/admin/petmedicine/PetMedicine.tsx","components/admin/petclinic/PetClinic.tsx","components/admin/petadopt/PetAdopt.tsx","components/admin/header/AdminHeader.tsx","components/admin/petstaff/PetStaff.tsx","components/admin/petlicense/PetLicense.tsx","components/admin/PetAdmin.tsx","components/nav/header/Header.tsx","components/admin/userprofile/UserProfile.tsx","components/admin/password/Password.tsx","components/client/header/ClientHeader.tsx","components/client/petadopt/PetAdopt.tsx","components/client/mypets/MyPet.tsx","components/client/petlicense/PetLicense.tsx","utils/report.util.ts","components/client/petappt/PetAppt.tsx","components/client/PetClient.tsx","components/staff/header/StaffHeader.tsx","components/staff/petappt/PetAppt.tsx","components/staff/appthistory/ApptHistory.tsx","components/staff/PetStaff.tsx","components/home/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","accessToken","email","username","role","doAuth","state","arguments","length","undefined","action","type","userAuthInfo","payload","storeProfile","menuData","isDataLoaded","menuReducer","doShrinkSidebar","rootReducer","combineReducers","auth","authReducer","profile","profileReducer","menu","sidebar","sidebarReducer","createStore","applyMiddleware","thunk","Backdrop","props","React","className","message","addAuthToken","token","name","toggleSidebar","toggle","Auth","signIn","password","Promise","resolve","reject","axios","post","then","response","data","headers","authorization","value","roles","authorities","map","a","join","catch","err","signUp","status","updatePassword","oldP","newP","confP","oldPassword","newPassword","confirmPassword","Authorization","concat","this","getToken","updateUser","firstname","lastname","dob","income","address","contact","gender","getAuthUser","setLocalStorage","localStorage","setItem","currentUserInfo","getItem","signOut","removeItem","connector","connect","setUsername","useState","setPassword","isSigningIn","setIsSigningIn","isVerifying","setIsVerifying","history","useHistory","useEffect","async","push","checkUserAuthStatus","doUpdateFields","ev","updateFn","target","createElement","Fragment","style","flexGrow","src","width","height","alt","onChange","onClick","alert","NavLink","to","joinArrayToString","arr","error","classes","Link","GuardedRoute","_ref","component","path","isAuthenticated","Route","Redirect","setEmail","isSigningUp","setIsSigningUp","getPetVaccines","get","getPetMedicines","getPetClinics","getUnadoptedPets","getStaffPetAppointments","getMyPets","AdminLayout","WrappedComponent","Modal","children","title","submitText","doSubmit","id","tabIndex","aria-labelledby","aria-hidden","data-dismiss","aria-label","onSubmit","preventDefault","method","Children","child","index","key","DataList","dataLength","icon","placeholder","secPlaceholder","actionIcon","actionText","actionCallback","FontAwesomeIcon","size","data-toggle","data-target","PetCategory","petTypes","setPetTypes","mode","setMode","setType","setStatus","setName","setDob","setGender","weight","setWeight","licenseCost","setLicenseCost","categoryId","setCategoryId","isFetched","setIsFetched","petCategory","getPetTypes","faPaw","faPlusCircle","scope","t","isActive","faEdit","category","addNewUnadoptPet","_document$getElementB2","_document$querySelect2","document","getElementById","classList","remove","querySelector","petType","cost","put","updatePetCategory","_document$getElementB","_document$querySelect","required","checked","valueAsNumber","min","PetGrooming","petGrooms","setPetGrooms","setCost","desc","setDesc","ins","setIns","time","setTime","setId","grooms","getPetGrooming","getPetGroom","faBath","description","isInsAllowed","faCheck","faTimes","timeRequire","addPetGrooming","updatePetGrooming","rows","PetVaccine","vaccines","setVaccines","vacc","getPetVaccine","faSyringe","amount","addPetVaccine","updatePetVaccine","PetMedicine","medicines","setMedicines","count","setCount","expire","setExpire","med","getPetMedicine","faTablets","perCost","expiresAt","substr","addPetMedicine","updatePetMedicine","Date","toISOString","PetClinic","clinics","setClinics","spl","setSpl","setAddress","cli","getPetClinic","faClinicMedical","specialities","addPetClinic","updatePetClinic","PetAdopt","pets","setPets","getUnadoptedPet","faDog","i","petName","diff","getTime","Math","abs","round","getMonths","AdminHeader","backgroundColor","activeClassName","FAIcon","faHospitalUser","faIdBadge","PetStaff","staffs","setStaffs","staffId","setStaffId","fee","setFee","setRole","staffClinic","setStaffClinic","staff","getStaffs","faInfoCircle","navigator","clipboard","writeText","faAt","consultFee","authority","replace","c","staffName","clinicIds","userRole","addPetStaff","values","selectedOptions","option","multiple","defaultValue","s","toString","MyPet","licenses","setLicenses","licenseId","setLicenseId","petId","setPetId","setPetName","licens","getLicense","animal","faCheckCircle","disabled","showSidebar","Switch","exact","PetLicense","Error","deleteAuthToken","background","borderRadius","faUserCog","faCalendarCheck","faUser","faLock","faSignOutAlt","UserProfile","setFirstname","setLastname","setIncome","setContact","userDetails","annualIncome","getUserDetails","Password","setOldP","setNewP","setConfP","ClientHeader","petWeight","setPetWeight","getPets","isLicensed","color","licenseForm","licenseNo","expiresOn","updatePet","filter","p","faBook","cursor","faHourglassHalf","applyPetLicense","getReportHtml","appt","medicine","medicineCost","vaccine","vaccineCost","grooming","groomingCost","pres","JSON","parse","tabletPrescribed","isConsult","medicineEl","m","mrng","noon","evng","ngt","isVaccine","vaccineEl","v","isGrooming","groomingEl","g","apptTime","toLocaleString","pet","user","reason","staffDetails","clinic","consultDetail","nextVisitSuggest","PetAppt","petClinics","setPetClinics","petAppts","setPetAppts","petStaffs","setPetStaffs","petServices","setPetServices","clinicId","setClinicId","staffRole","setStaffRole","service","setService","setGrooms","setApptTime","setReason","myPets","services","appts","grms","serviceName","faFileDownload","winUrl","URL","createObjectURL","Blob","window","open","bookPetAppt","slice","StaffHeader","faHistory","petMeds","setPetMeds","petVacs","setPetVacs","presMeds","setPresMeds","analysis","setAnalysis","nextTime","setNextTime","setVaccine","setAppt","meds","vacs","getPetAppts","toUpperCase","appointmentId","vaccineId","finalAppointment","find","night","nos","max","groomings","ApptHistory","Header","from","PetAdmin","PetClient","Login","Signup","Home","Boolean","location","hostname","match","defaults","baseURL","process","interceptors","use","includes","console","log","reload","ReactDOM","render","Provider","store","HashRouter","basename","StrictMode","App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35f2a8e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error-container\":\"Error_error-container__3xq7d\",\"error-banner\":\"Error_error-banner__sj1rc\",\"error-button\":\"Error_error-button__31nZ1\"};","export const ADD_AUTH_TOKEN = \"ADD_AUTH_TOKEN\";\r\nexport const DELETE_AUTH_TOKEN = \"DELETE_AUTH_TOKEN\";\r\n\r\nexport const ADD_USER_PROFILE_INFO = \"ADD_USER_PROFILE_INFO\";\r\n\r\nexport const ADD_MENU_INFO = \"ADD_MENU_INFO\";\r\nexport const UPDATE_MENU_LOADING_STATE = \"UPDATE_MENU_LOADING_STATE\";\r\n\r\nexport const SHRINK_SIDEBAR = 'SHRINK_SIDEBAR';","import { ADD_AUTH_TOKEN, DELETE_AUTH_TOKEN } from \"../actionTypes\";\r\nimport { AuthTokenProps } from \"../../props/ActionProps\";\r\nimport { UserAuthProps } from \"../../props/AuthProps\";\r\n\r\nconst initialState: UserAuthProps = {\r\n  accessToken: \"\",\r\n  email: \"\",\r\n  username: \"\",\r\n  role: \"\",\r\n};\r\n\r\nconst doAuth = (\r\n  state = initialState,\r\n  action: AuthTokenProps\r\n): UserAuthProps => {\r\n  switch (action.type) {\r\n    case ADD_AUTH_TOKEN: {\r\n      const userAuthInfo = action.payload;\r\n      return {\r\n        accessToken: userAuthInfo?.accessToken || \"\",\r\n        email: userAuthInfo?.email || \"\",\r\n        username: userAuthInfo?.username || \"\",\r\n        role: userAuthInfo?.role || \"\",\r\n      };\r\n    }\r\n    case DELETE_AUTH_TOKEN: {\r\n      return {\r\n        ...initialState,\r\n      };\r\n    }\r\n    default: {\r\n      return { ...state };\r\n    }\r\n  }\r\n};\r\n\r\nexport default doAuth;\r\n","import { ADD_USER_PROFILE_INFO } from \"../actionTypes\";\r\nimport { UserProfileActionProps } from \"../../props/ActionProps\";\r\nimport { UserProfileProps, VendorProfileProps } from \"../../props/VendorProps\";\r\n\r\nconst initialState: VendorProfileProps | null = null;\r\n\r\nconst storeProfile = (\r\n  state = initialState,\r\n  action: UserProfileActionProps\r\n): UserProfileProps | null => {\r\n  switch (action.type) {\r\n    case ADD_USER_PROFILE_INFO: {\r\n      return { ...action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default storeProfile;\r\n","import { ADD_MENU_INFO, UPDATE_MENU_LOADING_STATE } from \"../actionTypes\";\r\nimport { MenuActionProps } from \"../../props/ActionProps\";\r\nimport { MenuDataProps } from \"../../props/MenuProps\";\r\n\r\ntype MenuState = {\r\n    menuData: MenuDataProps\r\n    isDataLoaded: boolean\r\n};\r\n\r\nconst initialState: MenuState = {\r\n    menuData: {},\r\n    isDataLoaded: false\r\n};\r\n\r\nconst menuReducer = (state = initialState, action: MenuActionProps): MenuState => {\r\n    switch (action.type) {\r\n        case ADD_MENU_INFO: {\r\n            return {\r\n                ...state,\r\n                isDataLoaded: true,\r\n                menuData: { ...(action.payload) as MenuDataProps }\r\n            }\r\n        }\r\n        case UPDATE_MENU_LOADING_STATE: {\r\n            return {\r\n                ...state,\r\n                isDataLoaded: (action.payload) as boolean\r\n            }\r\n        }\r\n        default: {\r\n            return { ...state };\r\n        }\r\n    }\r\n}\r\n\r\nexport default menuReducer;\r\n","import { SHRINK_SIDEBAR } from \"../actionTypes\";\r\nimport { SidebarProps } from \"../../props/ActionProps\";\r\n\r\nconst initialState: boolean = true\r\n\r\nconst doShrinkSidebar = (state = initialState, action: SidebarProps): boolean => {\r\n    switch (action.type) {\r\n        case SHRINK_SIDEBAR: {\r\n            return action.payload;\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport default doShrinkSidebar;","import { combineReducers } from \"redux\";\r\nimport authReducer from './auth';\r\nimport profileReducer from './profile'\r\nimport menuReducer from './menu'\r\nimport sidebarReducer from './sidebar'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer,\r\n    menu: menuReducer,\r\n    sidebar: sidebarReducer\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","import * as React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\ntype BackdropProps = {\r\n    message?: string\r\n}\r\n\r\nconst Backdrop: React.FC<BackdropProps> = (props) => (\r\n    <div className=\"screen-backdrop\">\r\n        <div className=\"loader-ellipsis\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n        {\r\n            props.message && <h3 className='text-white'>{props.message}</h3>\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Backdrop;","import {\r\n  ADD_AUTH_TOKEN,\r\n  DELETE_AUTH_TOKEN,\r\n  ADD_USER_PROFILE_INFO,\r\n  ADD_MENU_INFO,\r\n  UPDATE_MENU_LOADING_STATE,\r\n  SHRINK_SIDEBAR,\r\n} from \"./actionTypes\";\r\nimport {\r\n  AuthTokenProps,\r\n  UserProfileActionProps,\r\n  MenuActionProps,\r\n  SidebarProps,\r\n} from \"../props/ActionProps\";\r\nimport { UserProfileProps } from \"../props/VendorProps\";\r\nimport { MenuDataProps } from \"../props/MenuProps\";\r\n\r\nexport const addAuthToken = (\r\n  token: string,\r\n  email: string,\r\n  name: string,\r\n  role: string\r\n): AuthTokenProps => ({\r\n  type: ADD_AUTH_TOKEN,\r\n  payload: {\r\n    accessToken: token,\r\n    username: name,\r\n    email,\r\n    role,\r\n  },\r\n});\r\n\r\nexport const deleteAuthToken = (): AuthTokenProps => ({\r\n  type: DELETE_AUTH_TOKEN,\r\n});\r\n\r\nexport const addVendorProfileInfo = (\r\n  profileInfo: UserProfileProps\r\n): UserProfileActionProps => ({\r\n  type: ADD_USER_PROFILE_INFO,\r\n  payload: { ...profileInfo },\r\n});\r\n\r\nexport const addMenuList = (menus: MenuDataProps): MenuActionProps => ({\r\n  type: ADD_MENU_INFO,\r\n  payload: menus,\r\n});\r\n\r\nexport const updateMenuLoader = (isLoaded: boolean): MenuActionProps => ({\r\n  type: UPDATE_MENU_LOADING_STATE,\r\n  payload: isLoaded,\r\n});\r\n\r\nexport const toggleSidebar = (toggle: boolean): SidebarProps => ({\r\n  type: SHRINK_SIDEBAR,\r\n  payload: toggle,\r\n});\r\n","import axios from \"axios\";\r\nimport { UserProfileProps } from \"../props/VendorProps\";\r\n\r\nexport const Auth = {\r\n  signIn: function (email: string, password: string): Promise<any | null> {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(`auth/public/login`, {\r\n          email,\r\n          password,\r\n        })\r\n        .then((response) => ({\r\n          data: response.data,\r\n          token: response.headers.authorization,\r\n        }))\r\n        .then((value) => {\r\n          const roles = value.data.authorities.map((a:any) => a['authority']).join(\",\");\r\n          resolve({\r\n            ...(value.data as UserProfileProps),\r\n            token: value.token,\r\n            role: roles\r\n          });\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n  signUp: function (\r\n    email: string,\r\n    username: string,\r\n    password: string\r\n  ): Promise<any | null> {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(`auth/public/signup`, {\r\n          email,\r\n          password,\r\n          username,\r\n        })\r\n        .then((response) => response.status)\r\n        .then((value) => {\r\n          resolve(value);\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n  updatePassword: function (\r\n    oldP: string,\r\n    newP: string,\r\n    confP: string\r\n  ): Promise<any | null> {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(\r\n          `auth/user/update/password`,\r\n          {\r\n            oldPassword: oldP,\r\n            newPassword: newP,\r\n            confirmPassword: confP,\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.getToken()}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => response.status)\r\n        .then((value) => {\r\n          resolve(value);\r\n        })\r\n\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n  updateUser: function (\r\n    firstname: string,\r\n    lastname: string,\r\n    dob: string,\r\n    income: number,\r\n    address: string,\r\n    contact: string,\r\n    gender: string\r\n  ): Promise<any | null> {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(\r\n          `auth/user/update`,\r\n          {\r\n            firstname,\r\n            lastname,\r\n            dob,\r\n            income,\r\n            address,\r\n            contact,\r\n            gender\r\n          },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.getToken()}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => response.status)\r\n        .then((value) => {\r\n          resolve(value);\r\n        })\r\n\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n  getAuthUser: function (): Promise<any | null> {\r\n    return new Promise((resolve, reject) => {\r\n      axios\r\n        .post(\r\n          `auth/user`,\r\n          {},\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${this.getToken()}`,\r\n            },\r\n          }\r\n        )\r\n        .then((response) => response.data)\r\n        .then((value) => {\r\n          resolve(value);\r\n        })\r\n        .catch((err) => reject(err));\r\n    });\r\n  },\r\n  setLocalStorage: function (\r\n    email: string,\r\n    name: string,\r\n    role: string,\r\n    token: string\r\n  ) {\r\n    localStorage.setItem(\"email\", email);\r\n    localStorage.setItem(\"name\", name);\r\n    localStorage.setItem(\"role\", role);\r\n    localStorage.setItem(\"token\", token);\r\n  },\r\n  currentUserInfo: function (): any {\r\n    const email = localStorage.getItem(\"email\") || \"\";\r\n    const name = localStorage.getItem(\"name\") || \"\";\r\n    const role = localStorage.getItem(\"role\") || \"\";\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    return {\r\n      email,\r\n      name,\r\n      role,\r\n      token,\r\n    };\r\n  },\r\n  signOut: function (): any {\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"name\");\r\n    localStorage.removeItem(\"role\");\r\n    localStorage.removeItem(\"token\");\r\n  },\r\n  getToken: function () {\r\n    return localStorage.getItem(\"token\") || \"\";\r\n  },\r\n};\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* TS Import */\r\nimport { addAuthToken } from \"../../store/actions\";\r\nimport { RootState } from \"../../store/reducers\";\r\nimport { URL_SIGNUP, URL_PET_HOME } from \"../../config/UrlRoute\";\r\n\r\n/* CSS Import */\r\nimport \"./Login.css\";\r\nimport { Auth } from \"../../services/auth.services\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  addAuthToken,\r\n});\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nconst Login: React.FC<Props> = (props) => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [isSigningIn, setIsSigningIn] = useState<boolean>(false);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function checkUserAuthStatus() {\r\n      const { accessToken, username, email, role } = props.auth;\r\n      if (accessToken && username && email && role) {\r\n        history.push(URL_PET_HOME);\r\n      } else {\r\n        try {\r\n          const { name, email, token, role } = Auth.currentUserInfo();\r\n          if (name && email && token && role) {\r\n            props.addAuthToken(token, email, name, role);\r\n            history.push(URL_PET_HOME);\r\n          }\r\n        } catch (err) {\r\n          setIsVerifying(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!props.auth.accessToken) {\r\n      checkUserAuthStatus();\r\n    }\r\n  });\r\n\r\n  const doLogin = async () => {\r\n    if (username && password) {\r\n      try {\r\n        setIsSigningIn(true);\r\n        const response = await Auth.signIn(username, password);\r\n        const { token, email, role } = response;\r\n        if (token && response.username && email && role) {\r\n          Auth.setLocalStorage(email, response.username, role, token);\r\n          props.addAuthToken(token, email, response.username, role);\r\n          history.push(URL_PET_HOME);\r\n        }\r\n      } catch (err: any) {\r\n        const message = err?.message;\r\n        setIsSigningIn(false);\r\n        setPassword(\"\");\r\n        if (message) {\r\n          alert(message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      {isSigningIn && (\r\n        <Backdrop message=\"Please wait while we are verifying you\" />\r\n      )}\r\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\r\n        <div className=\"col-md-12 d-flex flex-column p-0\">\r\n          <div\r\n            className=\"d-flex flex-column justify-content-center align-items-center\"\r\n            style={{ flexGrow: 14 }}\r\n          >\r\n            <div className=\"login-form\">\r\n              <div className=\"text-center\">\r\n                <img\r\n                  src={\"./assets/logo.svg\"}\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                  alt=\"icon\"\r\n                  className=\"mb-4\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Your email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  value={username}\r\n                  onChange={(ev) => doUpdateFields(ev, setUsername)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  value={password}\r\n                  onChange={(ev) => doUpdateFields(ev, setPassword)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn bg-primary form-control font-weight-bold mt-4 mb-2 text-white login-button\"\r\n                  onClick={doLogin}\r\n                >\r\n                  Login\r\n                </button>\r\n              </div>\r\n              <NavLink\r\n                to={URL_SIGNUP}\r\n                className=\"d-flex justify-content-center small text-primary\"\r\n                style={{ flexGrow: 1 }}\r\n              >\r\n                Don't have an account? &nbsp;\r\n                <span className=\"font-weight-bold\">Sign up</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connector(Login);\r\n","export const URL_LOGIN = \"/login\";\r\nexport const URL_SIGNUP = \"/signup\";\r\nexport const URL_PET_HOME = \"/home\";\r\nexport const URL_PET_PROFILE = \"/home/profile\";\r\nexport const URL_PET_ADMIN = \"/home/admin\";\r\nexport const URL_PET_USERS = \"/home/users\";\r\nexport const URL_PET_USERS_PETS = \"/home/users/my-pets\";\r\nexport const URL_PET_USERS_ADOPT = \"/home/users/adopt/pets\";\r\nexport const URL_PET_USERS_LICENSE = \"/home/users/license\";\r\nexport const URL_PET_USERS_APPT = \"/home/users/appt\";\r\nexport const URL_PET_STAFF = \"/home/staff\";\r\nexport const URL_PET_STAFF_APPT = \"/home/staff/appt\";\r\nexport const URL_PET_STAFF_APPT_HISTORY = \"/home/staff/appt-history\";\r\nexport const URL_PET_ADMIN_PET_TYPES = \"/home/admin/pet/types\";\r\nexport const URL_PET_ADMIN_PETS = \"/home/admin/pets\";\r\nexport const URL_PET_ADMIN_CLINC = \"/home/admin/clinic\";\r\nexport const URL_PET_ADMIN_STAFF = \"/home/admin/staff\";\r\nexport const URL_PET_ADMIN_MEDICINE = \"/home/admin/medicine\";\r\nexport const URL_PET_ADMIN_VACCINE = \"/home/admin/vaccine\";\r\nexport const URL_PET_ADMIN_LICENSE = \"/home/admin/license\";\r\nexport const URL_PET_ADMIN_GROOM = \"/home/admin/groom\";\r\nexport const URL_PET_PASSWORD = \"/home/password\";\r\n","export function joinArrayToString(arr: Array<string>): any {\r\n  return arr.join(\" \");\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n/* JS Import */\r\nimport { joinArrayToString } from '../../utils/array.utils';\r\n\r\n/* CSS Import */\r\nimport classes from './Error.module.css'\r\n\r\nfunction error() {\r\n    return (\r\n        <div className={classes['error-container']}>\r\n            <div className={classes['error-banner']}>\r\n                <h1>404</h1>\r\n                <span>Page not found</span>\r\n            </div>\r\n            <Link to='/login'>\r\n                <button className={joinArrayToString(\r\n                    [classes['error-button'], 'btn', 'bg-white', 'mt-4']\r\n                )}>\r\n                    Back to login\r\n                </button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default error;","import * as React from \"react\";\r\nimport { Route, Redirect, RouteComponentProps } from \"react-router-dom\";\r\n\r\n/* JS Import */\r\nimport { URL_LOGIN } from \"../../config/UrlRoute\";\r\n\r\ninterface GuardedRouteProps {\r\n  component:\r\n    | React.ComponentClass<any, any>\r\n    | React.FunctionComponent<any>\r\n    | React.ComponentClass<RouteComponentProps<any, any, unknown>, any>\r\n    | undefined;\r\n  path: string;\r\n  isAuthenticated: boolean;\r\n  [props: string]: any;\r\n}\r\n\r\nconst GuardedRoute = ({\r\n  component,\r\n  path,\r\n  isAuthenticated,\r\n  ...props\r\n}: GuardedRouteProps) =>\r\n  isAuthenticated ? (\r\n    <Route path={path} component={component} />\r\n  ) : (\r\n    <Redirect to={URL_LOGIN} />\r\n  );\r\n\r\nexport default GuardedRoute;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* TS Import */\r\nimport { addAuthToken } from \"../../store/actions\";\r\nimport { RootState } from \"../../store/reducers\";\r\nimport { URL_LOGIN, URL_PET_HOME } from \"../../config/UrlRoute\";\r\nimport { Auth } from \"../../services/auth.services\";\r\n\r\n/* CSS Import */\r\nimport \"./Signup.css\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  addAuthToken,\r\n});\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux;\r\n\r\nconst Signup: React.FC<Props> = (props) => {\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [isSigningUp, setIsSigningUp] = useState<boolean>(false);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function checkUserAuthStatus() {\r\n      const { accessToken, username, email, role } = props.auth;\r\n      if (accessToken && username && email && role) {\r\n        history.push(URL_PET_HOME);\r\n      } else {\r\n        try {\r\n          const { name, email, token, role } = Auth.currentUserInfo();\r\n          if (name && email && token && role) {\r\n            props.addAuthToken(token, email, name, role);\r\n            history.push(URL_PET_HOME);\r\n          } else {\r\n            setIsVerifying(false);\r\n          }\r\n        } catch (err) {\r\n          setIsVerifying(false);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!props.auth.accessToken) {\r\n      checkUserAuthStatus();\r\n    }\r\n  });\r\n\r\n  const doSignup = async () => {\r\n    if (username && password && email) {\r\n      try {\r\n        setIsSigningUp(true);\r\n        const response = await Auth.signUp(email, username, password);\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setUsername(\"\");\r\n        response === 200 && alert(\"Account created successfully\");\r\n        setIsSigningUp(false);\r\n      } catch (err: any) {\r\n        const message = err?.message;\r\n        setIsSigningUp(false);\r\n        setPassword(\"\");\r\n        if (message) {\r\n          alert(message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      {isSigningUp && (\r\n        <Backdrop message=\"Please wait while we are creating an account\" />\r\n      )}\r\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\r\n        <div className=\"col-md-12 d-flex flex-column p-0\">\r\n          <div\r\n            className=\"d-flex flex-column justify-content-center align-items-center\"\r\n            style={{ flexGrow: 14 }}\r\n          >\r\n            <div className=\"login-form\">\r\n              <div className=\"text-center\">\r\n                <img\r\n                  src={\"./assets/logo.svg\"}\r\n                  width=\"100\"\r\n                  height=\"100\"\r\n                  alt=\"icon\"\r\n                  className=\"mb-4\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  value={email}\r\n                  onChange={(ev) => doUpdateFields(ev, setEmail)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={username}\r\n                  onChange={(ev) => doUpdateFields(ev, setUsername)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  value={password}\r\n                  onChange={(ev) => doUpdateFields(ev, setPassword)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\r\n                  onClick={doSignup}\r\n                >\r\n                  Create an account\r\n                </button>\r\n              </div>\r\n              <NavLink\r\n                to={URL_LOGIN}\r\n                className=\"d-flex justify-content-center small text-primary\"\r\n                style={{ flexGrow: 1 }}\r\n              >\r\n                Already have an account? &nbsp;\r\n                <span className=\"font-weight-bold\">Sign in</span>\r\n              </NavLink>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default connector(Signup);\r\n","import axios from \"axios\";\r\nimport { VendorProfileProps } from \"../props/VendorProps\";\r\nimport { Auth } from \"./auth.services\";\r\n\r\nexport function getPetCategory(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"admin/pet/category\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetCategory(petType: string, cost: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/category?name=\" + petType + \"&cost=\" + cost,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePetCategory(\r\n  petType: string,\r\n  status: string,\r\n  cost: number\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        `admin/pet/category?name=${petType}&active=${status}&cost=${cost}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetGrooming(role: string = \"admin\"): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(role + \"/pet/groom\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetGroomings(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"user/pet/grooming\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetGrooming(\r\n  name: string,\r\n  description: string,\r\n  cost: number,\r\n  isInsAllowed: boolean,\r\n  timeRequire: number\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/groom\",\r\n        {\r\n          name,\r\n          description,\r\n          cost,\r\n          isInsAllowed,\r\n          timeRequire,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePetGrooming(\r\n  id: number,\r\n  name: string,\r\n  description: string,\r\n  cost: number,\r\n  isInsAllowed: boolean,\r\n  timeRequire: number\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        \"admin/pet/groom\",\r\n        {\r\n          id,\r\n          name,\r\n          description,\r\n          cost,\r\n          isInsAllowed,\r\n          timeRequire,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetVaccines(role: string = \"admin\"): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(role + \"/pet/vaccine\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetVaccine(\r\n  name: string,\r\n  description: string,\r\n  amount: number,\r\n  isInsAllowed: boolean\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/vaccine\",\r\n        {\r\n          name,\r\n          description,\r\n          amount,\r\n          isInsAllowed,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePetVaccine(\r\n  id: number,\r\n  name: string,\r\n  description: string,\r\n  amount: number,\r\n  isInsAllowed: boolean\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        \"admin/pet/vaccine\",\r\n        {\r\n          id,\r\n          name,\r\n          description,\r\n          amount,\r\n          isInsAllowed,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetMedicines(role: string = \"admin\"): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(role + \"/pet/medicine\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetMedicine(\r\n  name: string,\r\n  description: string,\r\n  cost: number,\r\n  count: number,\r\n  isInsAllowed: boolean,\r\n  expiresAt: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/medicine\",\r\n        {\r\n          name,\r\n          description,\r\n          count,\r\n          cost,\r\n          isInsAllowed,\r\n          expiresAt,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePetMedicine(\r\n  id: number,\r\n  name: string,\r\n  description: string,\r\n  cost: number,\r\n  count: number,\r\n  isInsAllowed: boolean,\r\n  expiresAt: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        \"admin/pet/medicine\",\r\n        {\r\n          id,\r\n          name,\r\n          description,\r\n          count,\r\n          cost,\r\n          isInsAllowed,\r\n          expiresAt,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addNewUnadoptPet(\r\n  name: string,\r\n  dob: string,\r\n  gender: string,\r\n  weight: number,\r\n  category: number\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        `admin/pet/new/unadopt`,\r\n        {\r\n          name,\r\n          dob,\r\n          gender,\r\n          weight,\r\n          category,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updateProfile(\r\n  endpoint: string,\r\n  email: string,\r\n  data: Partial<VendorProfileProps>,\r\n  token: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    const requestData: any = {\r\n      ...data,\r\n      rest_food_type:\r\n        data.rest_food_type === 0\r\n          ? \"Veg\"\r\n          : data.rest_food_type === 1\r\n          ? \"Non-Veg\"\r\n          : \"both\",\r\n    };\r\n    axios\r\n      .put(`${endpoint}/${email}`, requestData, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetClinics(role: string): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`${role}/pet/clinic`, {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetClinic(\r\n  name: string,\r\n  description: string,\r\n  specialities: string,\r\n  address: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/clinic\",\r\n        {\r\n          name,\r\n          description,\r\n          specialities,\r\n          address,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePetClinic(\r\n  id: number,\r\n  name: string,\r\n  description: string,\r\n  specialities: string,\r\n  address: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        \"admin/pet/clinic\",\r\n        {\r\n          id,\r\n          name,\r\n          description,\r\n          specialities,\r\n          address,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getUnadoptedPets(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"common/pet/unadopted\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function addPetStaff(\r\n  name: string,\r\n  email: string,\r\n  gender: string,\r\n  staffId: number,\r\n  fee: number,\r\n  role: string,\r\n  clinics: Array<any>\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"admin/pet/staff\",\r\n        {\r\n          staffName: name,\r\n          email,\r\n          staffId,\r\n          gender,\r\n          clinicIds: clinics,\r\n          consultFee: fee,\r\n          userRole: role,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetStaffs(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"admin/pet/staff\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetServices(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"user/pet/service\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function bookPetAppt(\r\n  petId: number,\r\n  clinicId: number,\r\n  staffId: number,\r\n  service: string,\r\n  apptTime: string,\r\n  reason: string,\r\n  grooms: Array<number>\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        \"user/pet/book/appointment\",\r\n        {\r\n          petId,\r\n          clinicId,\r\n          staffId,\r\n          service,\r\n          apptTime,\r\n          reason,\r\n          grooms,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getPetAppointments(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"user/pet/appointments\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getStaffPetAppointments(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"staff/pet/appointments\", {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function adoptNewPet(petId: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        `user/adopt/new`,\r\n        {\r\n          petId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getMyPets(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`user/pets`, {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function updatePet(\r\n  petId: number,\r\n  petName: string,\r\n  petWeight: number\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        `user/pet`,\r\n        {\r\n          petId,\r\n          petName,\r\n          petWeight,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function applyPetLicense(\r\n  petId: number,\r\n  cost: number,\r\n  desc: string\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(\r\n        `user/pet/license`,\r\n        {\r\n          petId,\r\n          cost,\r\n          description: desc,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getAppliedPetLicense(): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(`admin/pet/license`, {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function approvePetLicense(id: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        `admin/pet/license/${id}`,\r\n        {},\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function getClinicStaffs(clinic: number): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(\"user/pet/staff?clinic=\" + clinic, {\r\n        headers: {\r\n          Authorization: `Bearer ${Auth.getToken()}`,\r\n        },\r\n      })\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n\r\nexport function finalAppointment(\r\n  appointmentId:number,\r\n  vaccineId:number,\r\n  analysis: string,\r\n  nextTime: string,\r\n  medicines: Array<any>\r\n): Promise<any> {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(\r\n        \"staff/pet/finish/appointment\",\r\n        {\r\n          appointmentId,\r\n          vaccineId,\r\n          analysis,\r\n          nextTime,\r\n          medicines\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${Auth.getToken()}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => response.data)\r\n      .then((value) => {\r\n        resolve(value);\r\n      })\r\n      .catch((err) => reject(err));\r\n  });\r\n}\r\n","import React from \"react\";\r\n\r\nconst AdminLayout = (WrappedComponent) => {\r\n  function NewComponent() {\r\n    return (\r\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0 overflow-auto\">\r\n        <div className=\"col-md-12 d-flex flex-column p-0\">\r\n          <div className=\"h-100\">\r\n            <WrappedComponent />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return NewComponent;\r\n};\r\n\r\nexport default AdminLayout;\r\n","import React, { Children, Fragment } from \"react\";\r\n\r\nconst Modal: React.FC = ({ children, title, submitText, doSubmit }) => {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"petModal\"\r\n      tabIndex={-1}\r\n      aria-labelledby=\"petModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-lg\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"petModalLabel\">\r\n              {title}\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              data-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <form\r\n            className=\"mx-4\"\r\n            onSubmit={(ev) => {\r\n              ev.preventDefault();\r\n              doSubmit();\r\n            }}\r\n            method=\"POST\"\r\n          >\r\n            <div className=\"modal-body\">\r\n              {Children.map(children, (child, index) => (\r\n                <Fragment key={index}>{child}</Fragment>\r\n              ))}\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn bg-primary text-white login-button\"\r\n              >\r\n                {submitText}\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Fragment } from \"react\";\r\n\r\nconst DataList: React.FC<any> = ({\r\n  children,\r\n  dataLength,\r\n  icon,\r\n  placeholder,\r\n  secPlaceholder,\r\n  actionIcon,\r\n  actionText,\r\n  actionCallback,\r\n}) => {\r\n  return dataLength > 0 ? (\r\n    <Fragment>{children}</Fragment>\r\n  ) : (\r\n    <div className=\"d-flex flex-column justify-content-center align-items-center h-100\">\r\n      <FontAwesomeIcon icon={icon} size=\"8x\" className=\"text-dark-primary\" />\r\n      {placeholder && <p className=\"lead mt-2\">{placeholder}</p>}\r\n      {secPlaceholder && <p className=\"mark\">{secPlaceholder}</p>}\r\n      {(actionIcon || actionText) && (\r\n        <button\r\n          className=\"btn bg-primary mb-4 text-white login-button\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#petModal\"\r\n          onClick={(ev) => {\r\n            if (actionCallback) {\r\n              actionCallback(ev);\r\n            }\r\n          }}\r\n        >\r\n          {actionIcon && (\r\n            <Fragment>\r\n              <FontAwesomeIcon icon={actionIcon} /> &nbsp;\r\n            </Fragment>\r\n          )}\r\n          {actionText}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataList;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetCategory.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEdit, faPaw, faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addNewUnadoptPet,\r\n  addPetCategory,\r\n  getPetCategory,\r\n  updatePetCategory,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetCategory: React.FC = () => {\r\n  const [petTypes, setPetTypes] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [type, setType] = useState<string>(\"\");\r\n  const [status, setStatus] = useState<boolean>(true);\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [dob, setDob] = useState<string>(\"\");\r\n  const [gender, setGender] = useState<string>(\"\");\r\n  const [weight, setWeight] = useState<number>(0);\r\n  const [licenseCost, setLicenseCost] = useState<number>(0);\r\n  const [categoryId, setCategoryId] = useState<number>(0);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    async function getPetTypes() {\r\n      try {\r\n        const petCategory: any = await getPetCategory();\r\n        setPetTypes(petCategory);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (petTypes.length === 0 && !isFetched) {\r\n      getPetTypes();\r\n    }\r\n  });\r\n\r\n  const doUpdateType = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode =\r\n        mode === \"ADD\"\r\n          ? await addPetCategory(type, licenseCost)\r\n          : await updatePetCategory(\r\n              type,\r\n              status ? \"true\" : \"false\",\r\n              licenseCost\r\n            );\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setPetTypes([]);\r\n      setMode(\"\");\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doAddNewUnadoptPet = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode = await addNewUnadoptPet(\r\n        name,\r\n        dob,\r\n        gender,\r\n        weight,\r\n        categoryId\r\n      );\r\n      responseCode === 200 && alert(\"Added successfully\");\r\n      setMode(\"\");\r\n      setIsVerifying(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={petTypes.length}\r\n        icon={faPaw}\r\n        placeholder=\"No pet types available\"\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Pet Type\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          setType(\"\");\r\n          setLicenseCost(0);\r\n          setStatus(true);\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Pet Category</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  setType(\"\");\r\n                  setLicenseCost(0);\r\n                  setStatus(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Pet Type\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Type</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">License Cost</th>\r\n                  <th scope=\"col\" className=\"text-center\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {petTypes.map((t) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{t.id}</th>\r\n                    <td className=\"text-capitalize\">{t.name}</td>\r\n                    <td>{t.isActive ? \"Active\" : \"Inactive\"}</td>\r\n                    <td>{t.licenseCost}</td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faEdit}\r\n                        size={\"1x\"}\r\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\r\n                        title=\"Edit Pet Type\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setType(t.name);\r\n                          setStatus(t.isActive);\r\n                          setLicenseCost(t.licenseCost);\r\n                        }}\r\n                      />\r\n                      {t.isActive && (\r\n                        <FontAwesomeIcon\r\n                          icon={faPlusCircle}\r\n                          size={\"1x\"}\r\n                          className=\"text-primary mx-2 cursor-pointer\"\r\n                          title=\"Add Pet for Adoption\"\r\n                          data-toggle=\"modal\"\r\n                          data-target=\"#petModal\"\r\n                          onClick={() => {\r\n                            setMode(\"NEW_PET\");\r\n                            setCategoryId(t.id);\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n      <Modal\r\n        title={\r\n          mode === \"NEW_PET\"\r\n            ? \"Add New Pet\"\r\n            : mode === \"ADD\"\r\n            ? \"Create Pet Type\"\r\n            : \"Update Pet Type\"\r\n        }\r\n        submitText={\r\n          mode === \"NEW_PET\" ? \"Create\" : mode === \"ADD\" ? \"Create\" : \"Update\"\r\n        }\r\n        doSubmit={mode === \"NEW_PET\" ? doAddNewUnadoptPet : doUpdateType}\r\n      >\r\n        {mode !== \"\" && mode !== \"NEW_PET\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Pet Type</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={type}\r\n                onChange={(ev) => doUpdateFields(ev, setType)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={status}\r\n                onChange={(ev) => setStatus(ev.target.checked)}\r\n              />\r\n              <label className=\"text-secondary form-check-label\">Active</label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">License Cost</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={licenseCost}\r\n                onChange={(ev) => setLicenseCost(ev.target.valueAsNumber)}\r\n                required\r\n                min={5}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n\r\n        {mode === \"NEW_PET\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Pet Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Date of Birth</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={dob}\r\n                onChange={(ev) => doUpdateFields(ev, setDob)}\r\n                required\r\n                min={\"1970-01-01\"}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Gender</label>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"gender\"\r\n                  value={\"MALE\"}\r\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                  required\r\n                />\r\n                <label className=\"text-secondary form-check-label\">M</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"gender\"\r\n                  value={\"FEMALE\"}\r\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                  required\r\n                />\r\n                <label className=\"text-secondary form-check-label\">F</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Weight (in grams)</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={weight}\r\n                onChange={(ev) => setWeight(ev.target.valueAsNumber)}\r\n                required\r\n                min={5}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetCategory);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetGrooming.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBath,\r\n  faCheck,\r\n  faEdit,\r\n  faPlusCircle,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addPetGrooming,\r\n  getPetGrooming,\r\n  updatePetGrooming,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetGrooming: React.FC = () => {\r\n  const [petGrooms, setPetGrooms] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [cost, setCost] = useState<number>(0);\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [ins, setIns] = useState<boolean>(true);\r\n  const [time, setTime] = useState<number>(0);\r\n  const [id, setId] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getPetGroom() {\r\n      try {\r\n        const grooms: any = await getPetGrooming();\r\n        setPetGrooms(grooms);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (petGrooms.length === 0 && !isFetched) {\r\n      getPetGroom();\r\n    }\r\n  });\r\n\r\n  const doAddUpdateGroom = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode =\r\n        mode === \"ADD\"\r\n          ? await addPetGrooming(name, desc, cost, ins, time)\r\n          : await updatePetGrooming(id, name, desc, cost, ins, time);\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setPetGrooms([]);\r\n      setMode(\"\");\r\n      setId(-1);\r\n      setName(\"\");\r\n      setDesc(\"\");\r\n      setCost(0);\r\n      setTime(0);\r\n      setIns(true);\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n\r\n      <DataList\r\n        dataLength={petGrooms.length}\r\n        icon={faBath}\r\n        placeholder=\"No grooming services available\"\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Grooming\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          setId(-1);\r\n          setName(\"\");\r\n          setDesc(\"\");\r\n          setCost(0);\r\n          setTime(0);\r\n          setIns(true);\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Grooming Services</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  setId(-1);\r\n                  setName(\"\");\r\n                  setDesc(\"\");\r\n                  setCost(0);\r\n                  setTime(0);\r\n                  setIns(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Grooming\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Grooming Name</th>\r\n                  <th scope=\"col\">Cost</th>\r\n                  <th scope=\"col\">Insurance</th>\r\n                  <th scope=\"col\">Time Required</th>\r\n                  <th scope=\"col\" className=\"text-center\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {petGrooms.map((t) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{t.id}</th>\r\n                    <td>\r\n                      {t.name}\r\n                      <br />\r\n                      <span className=\"small\">{t.description}</span>\r\n                    </td>\r\n                    <td className=\"text-capitalize\">{t.cost}</td>\r\n                    <td>\r\n                      {t.isInsAllowed ? (\r\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-capitalize\">{t.timeRequire}</td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faEdit}\r\n                        size={\"1x\"}\r\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\r\n                        title=\"Edit Pet Type\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setId(t.id);\r\n                          setName(t.name);\r\n                          setDesc(t.description);\r\n                          setCost(t.cost);\r\n                          setTime(t.timeRequire);\r\n                          setIns(t.isInsAllowed);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"ADD\" ? \"Add New Grooming\" : \"Update Grooming Service\"}\r\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\r\n        doSubmit={doAddUpdateGroom}\r\n      >\r\n        {mode !== \"\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Grooming Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Grooming Cost</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={cost}\r\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\r\n                required\r\n                min={1}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Time Required (in mins)</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={time}\r\n                onChange={(ev) => setTime(ev.target.valueAsNumber)}\r\n                required\r\n                min={5}\r\n              />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={ins}\r\n                onChange={(ev) => setIns(ev.target.checked)}\r\n              />\r\n              <label className=\"text-secondary form-check-label\">\r\n                Insurance\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Description</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={desc}\r\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetGrooming);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetVaccine.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faEdit,\r\n  faPlusCircle,\r\n  faSyringe,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addPetVaccine,\r\n  getPetVaccines,\r\n  updatePetVaccine,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetVaccine: React.FC = () => {\r\n  const [vaccines, setVaccines] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [cost, setCost] = useState<number>(0);\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [ins, setIns] = useState<boolean>(true);\r\n  const [id, setId] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getPetVaccine() {\r\n      try {\r\n        const vacc: any = await getPetVaccines();\r\n        setVaccines(vacc);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (vaccines.length === 0 && !isFetched) {\r\n      getPetVaccine();\r\n    }\r\n  });\r\n\r\n  const doAddUpdateVaccine = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode =\r\n        mode === \"ADD\"\r\n          ? await addPetVaccine(name, desc, cost, ins)\r\n          : await updatePetVaccine(id, name, desc, cost, ins);\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setVaccines([]);\r\n      setMode(\"\");\r\n      setId(-1);\r\n      setName(\"\");\r\n      setDesc(\"\");\r\n      setCost(0);\r\n      setIns(true);\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={vaccines.length}\r\n        icon={faSyringe}\r\n        placeholder=\"No vaccines available\"\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Vaccine\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          setId(-1);\r\n          setName(\"\");\r\n          setDesc(\"\");\r\n          setCost(0);\r\n          setIns(true);\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Vaccine Details</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  setId(-1);\r\n                  setName(\"\");\r\n                  setDesc(\"\");\r\n                  setCost(0);\r\n                  setIns(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Vaccine\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Vaccine Name</th>\r\n                  <th scope=\"col\">Cost</th>\r\n                  <th scope=\"col\">Insurance</th>\r\n                  <th scope=\"col\" className=\"text-center\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {vaccines.map((t) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{t.id}</th>\r\n                    <td>\r\n                      {t.name}\r\n                      <br />\r\n                      <span className=\"small\">{t.description}</span>\r\n                    </td>\r\n                    <td className=\"text-capitalize\">{t.amount}</td>\r\n                    <td>\r\n                      {t.isInsAllowed ? (\r\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faEdit}\r\n                        size={\"1x\"}\r\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\r\n                        title=\"Edit Pet Type\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setId(t.id);\r\n                          setName(t.name);\r\n                          setDesc(t.description);\r\n                          setCost(t.amount);\r\n                          setIns(t.isInsAllowed);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"ADD\" ? \"Add New Vaccine\" : \"Update Vaccine Service\"}\r\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\r\n        doSubmit={doAddUpdateVaccine}\r\n      >\r\n        {mode !== \"\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Vaccine Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Vaccine Cost</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={cost}\r\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\r\n                min={3}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={ins}\r\n                onChange={(ev) => setIns(ev.target.checked)}\r\n              />\r\n              <label className=\"text-secondary form-check-label\">\r\n                Insurance\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Description</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={desc}\r\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetVaccine);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetMedicine.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faEdit,\r\n  faPlusCircle,\r\n  faTablets,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addPetMedicine,\r\n  getPetMedicines,\r\n  updatePetMedicine,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetMedicine: React.FC = () => {\r\n  const [medicines, setMedicines] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [cost, setCost] = useState<number>(0);\r\n  const [count, setCount] = useState<number>(0);\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [ins, setIns] = useState<boolean>(true);\r\n  const [expire, setExpire] = useState<string>(\"\");\r\n  const [id, setId] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getPetMedicine() {\r\n      try {\r\n        const med: any = await getPetMedicines();\r\n        setMedicines(med);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (medicines.length === 0 && !isFetched) {\r\n      getPetMedicine();\r\n    }\r\n  });\r\n\r\n  const doAddUpdateMedicine = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode =\r\n        mode === \"ADD\"\r\n          ? await addPetMedicine(name, desc, cost, count, ins, expire)\r\n          : await updatePetMedicine(id, name, desc, cost, count, ins, expire);\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setMedicines([]);\r\n      setMode(\"\");\r\n      setId(-1);\r\n      setName(\"\");\r\n      setDesc(\"\");\r\n      setCost(0);\r\n      setCount(0);\r\n      setExpire(\"\");\r\n      setIns(true);\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={medicines.length}\r\n        icon={faTablets}\r\n        placeholder=\"No medicines available\"\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Medicine\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          setId(-1);\r\n          setName(\"\");\r\n          setDesc(\"\");\r\n          setCost(0);\r\n          setCount(0);\r\n          setExpire(\"\");\r\n          setIns(true);\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Medicine Details</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  setId(-1);\r\n                  setName(\"\");\r\n                  setDesc(\"\");\r\n                  setCost(0);\r\n                  setCount(0);\r\n                  setExpire(\"\");\r\n                  setIns(true);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Medicine\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Medicine Name</th>\r\n                  <th scope=\"col\">Per Cost</th>\r\n                  <th scope=\"col\">Available Count</th>\r\n                  <th scope=\"col\">Insurance</th>\r\n                  <th scope=\"col\">Expires At</th>\r\n                  <th scope=\"col\" className=\"text-center\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {medicines.map((t) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{t.id}</th>\r\n                    <td>\r\n                      {t.name}\r\n                      <br />\r\n                      <span className=\"small\">{t.description}</span>\r\n                    </td>\r\n                    <td className=\"text-capitalize\">{t.perCost}</td>\r\n                    <td className=\"text-capitalize\">{t.count}</td>\r\n                    <td>\r\n                      {t.isInsAllowed ? (\r\n                        <FontAwesomeIcon icon={faCheck} size={\"1x\"} />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faTimes} size={\"1x\"} />\r\n                      )}\r\n                    </td>\r\n                    <td className=\"text-capitalize\">\r\n                      {t.expiresAt && t.expiresAt.substr(0, 10)}\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faEdit}\r\n                        size={\"1x\"}\r\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\r\n                        title=\"Edit Medicine\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setId(t.id);\r\n                          setName(t.name);\r\n                          setDesc(t.description);\r\n                          setCost(t.perCost);\r\n                          setCount(t.count);\r\n                          setExpire(t.expiresAt && t.expiresAt.substr(0, 10));\r\n                          setIns(t.isInsAllowed);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"ADD\" ? \"Add New Medicine\" : \"Update Medicine\"}\r\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\r\n        doSubmit={doAddUpdateMedicine}\r\n      >\r\n        {mode !== \"\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Medicine Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Per Cost</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={cost}\r\n                onChange={(ev) => setCost(ev.target.valueAsNumber)}\r\n                required\r\n                min={0}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Available Count</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={count}\r\n                onChange={(ev) => setCount(ev.target.valueAsNumber)}\r\n                required\r\n                min={1}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Expires At</label>\r\n              <input\r\n                type=\"date\"\r\n                className=\"form-control\"\r\n                value={expire}\r\n                onChange={(ev) => setExpire(ev.target.value)}\r\n                required\r\n                min={new Date().toISOString().substr(0, 10)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                checked={ins}\r\n                onChange={(ev) => setIns(ev.target.checked)}\r\n              />\r\n              <label className=\"text-secondary form-check-label\">\r\n                Insurance\r\n              </label>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Description</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={desc}\r\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetMedicine);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetClinic.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClinicMedical,\r\n  faEdit,\r\n  faPlusCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addPetClinic,\r\n  getPetClinics,\r\n  updatePetClinic,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetClinic: React.FC = () => {\r\n  const [clinics, setClinics] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [spl, setSpl] = useState<string>(\"\");\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [id, setId] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getPetClinic() {\r\n      try {\r\n        const cli: any = await getPetClinics(\"admin\");\r\n        setClinics(cli);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (clinics.length === 0 && !isFetched) {\r\n      getPetClinic();\r\n    }\r\n  });\r\n\r\n  const doAddUpdateClinic = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode =\r\n        mode === \"ADD\"\r\n          ? await addPetClinic(name, desc, spl, address)\r\n          : await updatePetClinic(id, name, desc, spl, address);\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setClinics([]);\r\n      setMode(\"\");\r\n      setId(-1);\r\n      setName(\"\");\r\n      setDesc(\"\");\r\n      setSpl(\"\");\r\n      setAddress(\"\");\r\n      setDesc(\"\");\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={clinics.length}\r\n        icon={faClinicMedical}\r\n        placeholder=\"No clinics available\"\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Clinic\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          setId(-1);\r\n          setName(\"\");\r\n          setDesc(\"\");\r\n          setSpl(\"\");\r\n          setAddress(\"\");\r\n          setDesc(\"\");\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Clinic Details</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  setId(-1);\r\n                  setName(\"\");\r\n                  setDesc(\"\");\r\n                  setSpl(\"\");\r\n                  setAddress(\"\");\r\n                  setDesc(\"\");\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Clinic\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Clinic Name</th>\r\n                  <th scope=\"col\">Specialities</th>\r\n                  <th scope=\"col\">Description</th>\r\n                  <th scope=\"col\" className=\"text-center\">\r\n                    Action\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {clinics.map((t) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{t.id}</th>\r\n                    <td>\r\n                      {t.name}\r\n                      <br />\r\n                      <span className=\"small font-italic\">\r\n                        <address>{t.address}</address>\r\n                      </span>\r\n                    </td>\r\n                    <td>\r\n                      <pre>{t.specialities}</pre>\r\n                    </td>\r\n                    <td>\r\n                      <pre>{t.description}</pre>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        icon={faEdit}\r\n                        size={\"1x\"}\r\n                        className=\"mx-2 cursor-pointer text-dark-primary\"\r\n                        title=\"Edit Clinic\"\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setId(t.id);\r\n                          setName(t.name);\r\n                          setDesc(t.description);\r\n                          setSpl(t.specialities);\r\n                          setAddress(t.address);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"ADD\" ? \"Add New Clinic\" : \"Update Clinic\"}\r\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\r\n        doSubmit={doAddUpdateClinic}\r\n      >\r\n        {mode !== \"\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Clinic Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Clinic Specialities</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={spl}\r\n                onChange={(ev) => doUpdateFields(ev, setSpl)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Description</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={desc}\r\n                onChange={(ev) => doUpdateFields(ev, setDesc)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Address</label>\r\n              <textarea\r\n                rows={3}\r\n                className=\"form-control\"\r\n                value={address}\r\n                onChange={(ev) => doUpdateFields(ev, setAddress)}\r\n                required\r\n              ></textarea>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetClinic);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetAdopt.css\";\r\nimport { getUnadoptedPets } from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\nimport { faDog } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PetAdopt: React.FC = () => {\r\n  const [pets, setPets] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getUnadoptedPet() {\r\n      try {\r\n        const cli: any = await getUnadoptedPets();\r\n        setPets(cli);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (pets.length === 0 && !isFetched) {\r\n      getUnadoptedPet();\r\n    }\r\n  });\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  // const doUpdateFields = (\r\n  //   ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n  //   updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  // ) => {\r\n  //   updateFn(ev.target.value);\r\n  // };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={pets.length}\r\n        icon={faDog}\r\n        placeholder=\"No pets available to adopt\"\r\n        secPlaceholder='To add new pet, visit \"Pet Types\"'\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Unadopted Pets</h3>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Weight (in grams)</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">Age (in months)</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pets.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{t.petName}</td>\r\n                    <td>{t.weight}</td>\r\n                    <td>{t.gender}</td>\r\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\r\n                    <td>{getMonths(t.dob)}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetAdopt);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBath,\r\n  faClinicMedical,\r\n  faDog,\r\n  faHospitalUser,\r\n  faIdBadge,\r\n  faPaw,\r\n  faSyringe,\r\n  faTablets,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* JS Import */\r\nimport {\r\n  URL_PET_ADMIN_CLINC,\r\n  URL_PET_ADMIN_PETS,\r\n  URL_PET_ADMIN_PET_TYPES,\r\n  URL_PET_ADMIN_STAFF,\r\n  URL_PET_ADMIN_MEDICINE,\r\n  URL_PET_ADMIN_VACCINE,\r\n  URL_PET_ADMIN_GROOM,\r\n  URL_PET_ADMIN_LICENSE,\r\n} from \"../../../config/UrlRoute\";\r\n\r\n/* CSS Import */\r\nimport \"./AdminHeader.css\";\r\n\r\nconst AdminHeader: React.FC = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column h-100 p-2\"\r\n      style={{\r\n        backgroundColor: \"var(--dark-primary-transparent)\",\r\n      }}\r\n    >\r\n      <div className=\"header-navigation\">\r\n        <div className=\"list-group\">\r\n          <NavLink\r\n            to={URL_PET_ADMIN_CLINC}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faClinicMedical} size=\"1x\" />\r\n            </span>\r\n            Clinic\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_STAFF}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faHospitalUser} size=\"1x\" />\r\n            </span>\r\n            Staff\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_PET_TYPES}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faPaw} size=\"1x\" />\r\n            </span>\r\n            Pet Types\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_PETS}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faDog} size=\"1x\" />\r\n            </span>\r\n            Pets\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_MEDICINE}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faTablets} size=\"1x\" />\r\n            </span>\r\n            Medicine\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_VACCINE}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faSyringe} size=\"1x\" />\r\n            </span>\r\n            Vaccine\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_GROOM}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faBath} size=\"1x\" />\r\n            </span>\r\n            Grooming\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_ADMIN_LICENSE}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faIdBadge} size=\"1x\" />\r\n            </span>\r\n            License\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetStaff.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAt,\r\n  faHospitalUser,\r\n  faInfoCircle,\r\n  faPlusCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  addPetStaff,\r\n  getPetClinics,\r\n  getPetStaffs,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetStaff: React.FC = () => {\r\n  const [staffs, setStaffs] = useState<Array<any>>([]);\r\n  const [clinics, setClinics] = useState<Array<any>>([]);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [staffId, setStaffId] = useState<number>(0);\r\n  const [fee, setFee] = useState<number>(0);\r\n  const [role, setRole] = useState<string>(\"\");\r\n  const [gender, setGender] = useState<string>(\"MALE\");\r\n  const [staffClinic, setStaffClinic] = useState<Array<number>>([]);\r\n  // const [id, setId] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getStaffs() {\r\n      try {\r\n        const staff: any = await getPetStaffs();\r\n        const cli: any = await getPetClinics(\"admin\");\r\n        setStaffs(staff);\r\n        setClinics(cli);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (staffs.length === 0 && !isFetched) {\r\n      getStaffs();\r\n    }\r\n  });\r\n\r\n  const doAddUpdateStaff = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode = await addPetStaff(\r\n        name,\r\n        email,\r\n        gender,\r\n        staffId,\r\n        fee,\r\n        role,\r\n        staffClinic\r\n      );\r\n\r\n      responseCode === 200 && alert(\"Updated successfully\");\r\n      setStaffs([]);\r\n      setMode(\"\");\r\n      // setId(-1);\r\n      setName(\"\");\r\n      setEmail(\"\");\r\n      setGender(\"\");\r\n      setStaffId(0);\r\n      setFee(0);\r\n      setRole(\"\");\r\n      setStaffClinic([]);\r\n      setIsVerifying(false);\r\n      setIsFetched(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    } finally {\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<\r\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\r\n    >,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={staffs.length}\r\n        icon={faHospitalUser}\r\n        placeholder={\"No staffs available\"}\r\n        actionIcon={faPlusCircle}\r\n        actionText=\"Add Staff\"\r\n        actionCallback={() => {\r\n          setMode(\"ADD\");\r\n          // setId(-1);\r\n          setName(\"\");\r\n          setEmail(\"\");\r\n          setGender(\"\");\r\n          setStaffId(0);\r\n          setFee(0);\r\n          setRole(\"\");\r\n          setStaffClinic([]);\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Staff Details</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"ADD\");\r\n                  // setId(-1);\r\n                  setName(\"\");\r\n                  setEmail(\"\");\r\n                  setGender(\"\");\r\n                  setStaffId(0);\r\n                  setFee(0);\r\n                  setRole(\"\");\r\n                  setStaffClinic([]);\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faPlusCircle} />\r\n                &nbsp; Add Staff\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Staff Name</th>\r\n                  <th scope=\"col\">Fee</th>\r\n                  <th scope=\"col\">Role</th>\r\n                  <th scope=\"col\">Clinic</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {staffs.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>\r\n                      {t.username}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon\r\n                        icon={faInfoCircle}\r\n                        size={\"1x\"}\r\n                        title={`Staff #: ${t.staff.id}`}\r\n                        onClick={() =>\r\n                          navigator.clipboard.writeText(t.staff.id)\r\n                        }\r\n                      />\r\n                      &nbsp;\r\n                      <FontAwesomeIcon\r\n                        icon={faAt}\r\n                        size={\"1x\"}\r\n                        title={`${t.email}`}\r\n                        onClick={() => navigator.clipboard.writeText(t.email)}\r\n                      />\r\n                    </td>\r\n                    <td>{t.staff.consultFee}</td>\r\n                    <td className=\"text-capitalize\">\r\n                      {t.authorities\r\n                        .map((a: any) => a.authority.replace(\"ROLE_\", \"\"))\r\n                        .join(\", \")}\r\n                    </td>\r\n                    <td>\r\n                      <table>\r\n                        <tbody>\r\n                          {t.staff.clinics.map((c: any, i: number) => (\r\n                            <tr key={i}>\r\n                              <td>\r\n                                <strong>\r\n                                  {i + 1}\r\n                                  {\". \" + c.name}\r\n                                </strong>\r\n                                <br />\r\n                                <i>{c.specialities}</i>\r\n                                <br />\r\n                                <i>{c.address}</i>\r\n                              </td>\r\n                            </tr>\r\n                          ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"ADD\" ? \"Add New Staff\" : \"Update Staff\"}\r\n        submitText={mode === \"ADD\" ? \"Create\" : \"Update\"}\r\n        doSubmit={doAddUpdateStaff}\r\n      >\r\n        {mode !== \"\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Staff Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={name}\r\n                onChange={(ev) => doUpdateFields(ev, setName)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Staff Email</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                value={email}\r\n                onChange={(ev) => doUpdateFields(ev, setEmail)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Staff ID</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={staffId}\r\n                onChange={(ev) => setStaffId(ev.target.valueAsNumber)}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Gender</label>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"gender\"\r\n                  value={\"MALE\"}\r\n                  checked={gender === \"MALE\"}\r\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                  required\r\n                />\r\n                <label className=\"text-secondary form-check-label\">M</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"gender\"\r\n                  value={\"FEMALE\"}\r\n                  checked={gender === \"FEMALE\"}\r\n                  onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                  required\r\n                />\r\n                <label className=\"text-secondary form-check-label\">F</label>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Service Fee</label>\r\n              <input\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={fee}\r\n                onChange={(ev) => setFee(ev.target.valueAsNumber)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Clinic</label>\r\n              <select\r\n                name=\"clinic\"\r\n                className=\"form-control\"\r\n                title=\"clinic\"\r\n                onChange={(ev) => {\r\n                  const options = [...ev.target.selectedOptions];\r\n                  const values = options.map((option) => option.value);\r\n                  setStaffClinic(values);\r\n                }}\r\n                required\r\n                multiple\r\n                defaultValue={[...staffClinic.map((s) => s.toString())]}\r\n              >\r\n                {clinics.map((c, i) => {\r\n                  return (\r\n                    <option value={c.id} key={i}>\r\n                      {c.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Staff Role</label>\r\n              <select\r\n                name=\"role\"\r\n                id=\"role\"\r\n                className=\"form-control\"\r\n                title=\"staff role\"\r\n                onChange={(ev) => {\r\n                  doUpdateFields(ev, setRole);\r\n                }}\r\n                required\r\n                value={role}\r\n              >\r\n                <option value=\"-1\"></option>\r\n                <option value=\"VETERINARIAN\">VETERINARIAN</option>\r\n                <option value=\"GROOMING\">GROOM</option>\r\n              </select>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetStaff);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetLicense.css\";\r\nimport {\r\n  approvePetLicense,\r\n  getAppliedPetLicense,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheckCircle,\r\n  faIdBadge,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst MyPet: React.FC = () => {\r\n  const [licenses, setLicenses] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [licenseId, setLicenseId] = useState<number>(0);\r\n  const [petId, setPetId] = useState<number>(0);\r\n  const [petName, setPetName] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getLicense() {\r\n      try {\r\n        const licens: any = await getAppliedPetLicense();\r\n        setLicenses(licens);\r\n        setIsVerifying(false);\r\n        setMode(\"\");\r\n        setLicenseId(0);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (licenses.length === 0 && !isFetched) {\r\n      getLicense();\r\n    }\r\n  });\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  const doApproveLicense = async () => {\r\n    if (mode === \"EDIT\") {\r\n      await approvePetLicense(licenseId);\r\n      setIsFetched(false);\r\n      setLicenses([]);\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={licenses.length}\r\n        icon={faIdBadge}\r\n        placeholder=\"No licenses applied\"\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Applied Pet License</h3>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Weight (in grams)</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">License Cost</th>\r\n                  <th scope=\"col\">Age (in months)</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {licenses.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>\r\n                      {t.animal.petName}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon\r\n                        icon={faInfoCircle}\r\n                        title={\"Pet ID: \" + t.animal.id}\r\n                      />\r\n                    </td>\r\n                    <td>{t.animal.weight}</td>\r\n                    <td>{t.animal.gender}</td>\r\n                    <td className=\"text-capitalize\">\r\n                      {t.animal.petCategory.name}\r\n                    </td>\r\n                    <td className=\"text-capitalize\">{t.amount}</td>\r\n                    <td>{getMonths(t.animal.dob)}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"bg-primary text-white btn\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setPetId(t.animal.id);\r\n                          setPetName(t.animal.petName);\r\n                          setLicenseId(t.id);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faCheckCircle} />\r\n                        &nbsp; Approve\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <Modal\r\n            title={mode === \"EDIT\" && \"License Approval\"}\r\n            submitText={mode === \"EDIT\" && \"Approve\"}\r\n            doSubmit={doApproveLicense}\r\n          >\r\n            {mode === \"EDIT\" && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet #</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    disabled\r\n                    className=\"form-control\"\r\n                    value={petId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={petName}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Modal>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(MyPet);\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n/* TS Import */\r\nimport {\r\n  URL_PET_ADMIN,\r\n  URL_PET_ADMIN_CLINC,\r\n  URL_PET_ADMIN_PET_TYPES,\r\n  URL_PET_ADMIN_STAFF,\r\n  URL_PET_ADMIN_PETS,\r\n  URL_PET_ADMIN_MEDICINE,\r\n  URL_PET_ADMIN_VACCINE,\r\n  URL_PET_ADMIN_GROOM,\r\n  URL_PET_ADMIN_LICENSE,\r\n} from \"../../config/UrlRoute\";\r\n\r\n/* COMPONENT Import */\r\nimport { RootState } from \"../../store/reducers\";\r\nimport { toggleSidebar } from \"../../store/actions\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { joinArrayToString } from \"../../utils/array.utils\";\r\nimport PetCategory from \"./petcategory/PetCategory\";\r\nimport PetGrooming from \"./petgrooming/PetGrooming\";\r\nimport PetVaccine from \"./petvaccine/PetVaccine\";\r\nimport PetMedicine from \"./petmedicine/PetMedicine\";\r\nimport PetClinic from \"./petclinic/PetClinic\";\r\nimport PetAdopt from \"./petadopt/PetAdopt\";\r\nimport AdminHeader from \"./header/AdminHeader\";\r\nimport PetStaff from \"./petstaff/PetStaff\";\r\n\r\nimport Error from \"../../hoc-components/error/Error\";\r\nimport PetLicense from \"./petlicense/PetLicense\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  showSidebar: state.sidebar,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  toggleSidebar,\r\n});\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst PetAdmin: React.FC<Props> = (props) => (\r\n  <Fragment>\r\n    <div className={\"p-0 col-md-2\"}>\r\n      <AdminHeader />\r\n    </div>\r\n    <div\r\n      className={joinArrayToString([\r\n        \"p-0 overflow-hidden px-0\",\r\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\r\n      ])}\r\n    >\r\n      <Switch>\r\n        <Redirect path={URL_PET_ADMIN} to={URL_PET_ADMIN_PETS} exact />\r\n        <Route path={URL_PET_ADMIN_CLINC}>\r\n          <PetClinic />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_STAFF}>\r\n          <PetStaff />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_PET_TYPES}>\r\n          <PetCategory />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_PETS}>\r\n          <PetAdopt />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_MEDICINE}>\r\n          <PetMedicine />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_VACCINE}>\r\n          <PetVaccine />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_GROOM}>\r\n          <PetGrooming />\r\n        </Route>\r\n        <Route path={URL_PET_ADMIN_LICENSE}>\r\n          <PetLicense />\r\n        </Route>\r\n        <Route path=\"**\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default connector(PetAdmin);\r\n","import React from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faSignOutAlt,\r\n  faLock,\r\n  faUser,\r\n  faUserCog,\r\n  faCalendarCheck,\r\n  faPaw,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* JS Import */\r\nimport { deleteAuthToken } from \"../../../store/actions\";\r\nimport {\r\n  URL_LOGIN,\r\n  URL_PET_PROFILE,\r\n  URL_PET_PASSWORD,\r\n  URL_PET_ADMIN,\r\n  URL_PET_STAFF,\r\n  URL_PET_USERS,\r\n} from \"../../../config/UrlRoute\";\r\nimport { RootState } from \"../../../store/reducers\";\r\nimport { joinArrayToString } from \"../../../utils/array.utils\";\r\n\r\n/* CSS Import */\r\nimport \"./Header.css\";\r\nimport { Auth } from \"../../../services/auth.services\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  sidebar: state.sidebar,\r\n  auth: state.auth,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, { deleteAuthToken });\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  toggleSidebar: (toggle: boolean) => void;\r\n};\r\n\r\nconst Header: React.FC<Props> = (props) => {\r\n  const history = useHistory();\r\n\r\n  const doLogout = async () => {\r\n    await Auth.signOut();\r\n    props.deleteAuthToken();\r\n    history.push(URL_LOGIN);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column h-100 p-2\"\r\n      style={{\r\n        backgroundColor: \"var(--dark-primary)\",\r\n      }}\r\n    >\r\n      <div className=\"header-navigation\">\r\n        <img\r\n          src={\"./assets/logo.svg\"}\r\n          alt=\"logo\"\r\n          style={{\r\n            width: !props.sidebar ? \"100px\" : \"auto\",\r\n            background: \"white\",\r\n            borderRadius: \"5px\",\r\n          }}\r\n          className=\"img-fluid my-4 mx-3 header-logo cursor-pointer\"\r\n          onClick={() => props.toggleSidebar(!props.sidebar)}\r\n        />\r\n        <div className=\"list-group\">\r\n          {props.auth.role === \"ROLE_ADMIN\" && (\r\n            <NavLink\r\n              to={URL_PET_ADMIN}\r\n              className={joinArrayToString([\r\n                \"list-group-item list-group-item-action\",\r\n                props.sidebar ? \"text-center\" : \"\",\r\n              ])}\r\n              activeClassName=\"active\"\r\n            >\r\n              <span\r\n                className={joinArrayToString([\r\n                  \"badge\",\r\n                  props.sidebar ? \"\" : \"mr-3\",\r\n                ])}\r\n              >\r\n                <FAIcon icon={faUserCog} size={props.sidebar ? \"2x\" : \"1x\"} />\r\n              </span>\r\n              {!props.sidebar && \"Manage\"}\r\n            </NavLink>\r\n          )}\r\n          {props.auth &&\r\n            (props.auth.role === \"ROLE_VETERINARIAN\" ||\r\n              props.auth.role === \"ROLE_GROOMING\") && (\r\n              <NavLink\r\n                to={URL_PET_STAFF}\r\n                className={joinArrayToString([\r\n                  \"list-group-item list-group-item-action\",\r\n                  props.sidebar ? \"text-center\" : \"\",\r\n                ])}\r\n                activeClassName=\"active\"\r\n              >\r\n                <span\r\n                  className={joinArrayToString([\r\n                    \"badge\",\r\n                    props.sidebar ? \"\" : \"mr-3\",\r\n                  ])}\r\n                >\r\n                  <FAIcon\r\n                    icon={faCalendarCheck}\r\n                    size={props.sidebar ? \"2x\" : \"1x\"}\r\n                  />\r\n                </span>\r\n                {!props.sidebar && \"Appointment\"}\r\n              </NavLink>\r\n            )}\r\n          {props.auth && props.auth.role === \"ROLE_CLIENT\" && (\r\n            <NavLink\r\n              to={URL_PET_USERS}\r\n              className={joinArrayToString([\r\n                \"list-group-item list-group-item-action\",\r\n                props.sidebar ? \"text-center\" : \"\",\r\n              ])}\r\n              activeClassName=\"active\"\r\n            >\r\n              <span\r\n                className={joinArrayToString([\r\n                  \"badge\",\r\n                  props.sidebar ? \"\" : \"mr-3\",\r\n                ])}\r\n              >\r\n                <FAIcon icon={faPaw} size={props.sidebar ? \"2x\" : \"1x\"} />\r\n              </span>\r\n              {!props.sidebar && \"My Pets\"}\r\n            </NavLink>\r\n          )}\r\n          <NavLink\r\n            to={URL_PET_PROFILE}\r\n            className={joinArrayToString([\r\n              \"list-group-item list-group-item-action\",\r\n              props.sidebar ? \"text-center\" : \"\",\r\n            ])}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span\r\n              className={joinArrayToString([\r\n                \"badge\",\r\n                props.sidebar ? \"\" : \"mr-3\",\r\n              ])}\r\n            >\r\n              <FAIcon icon={faUser} size={props.sidebar ? \"2x\" : \"1x\"} />\r\n            </span>\r\n            {!props.sidebar && \"Profile\"}\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_PASSWORD}\r\n            className={joinArrayToString([\r\n              \"list-group-item list-group-item-action\",\r\n              props.sidebar ? \"text-center\" : \"\",\r\n            ])}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span\r\n              className={joinArrayToString([\r\n                \"badge\",\r\n                props.sidebar ? \"\" : \"mr-3\",\r\n              ])}\r\n            >\r\n              <FAIcon icon={faLock} size={props.sidebar ? \"2x\" : \"1x\"} />\r\n            </span>\r\n            {!props.sidebar && \"Password\"}\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          flexGrow: 1,\r\n        }}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          onClick={doLogout}\r\n          className={joinArrayToString([\r\n            \"list-group-item list-group-item-action\",\r\n            props.sidebar ? \"text-center\" : \"\",\r\n          ])}\r\n        >\r\n          <span\r\n            className={joinArrayToString([\r\n              \"badge\",\r\n              props.sidebar ? \"\" : \"mr-3\",\r\n            ])}\r\n          >\r\n            <FAIcon icon={faSignOutAlt} size={props.sidebar ? \"2x\" : \"1x\"} />\r\n          </span>\r\n          {!props.sidebar && \"Logout\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connector(Header);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* TS Import */\r\nimport { Auth } from \"../../../services/auth.services\";\r\n\r\n/* CSS Import */\r\nimport \"./UserProfile.css\";\r\n\r\nconst UserProfile: React.FC = () => {\r\n  const [firstname, setFirstname] = useState<string>(\"\");\r\n  const [lastname, setLastname] = useState<string>(\"\");\r\n  const [username, setUsername] = useState<string>(\"\");\r\n  const [income, setIncome] = useState<number>(0);\r\n  const [address, setAddress] = useState<string>(\"\");\r\n  const [dob, setDob] = useState<string>(\"\");\r\n  const [gender, setGender] = useState<string>(\"MALE\");\r\n  const [contact, setContact] = useState<string>(\"\");\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    async function getUserDetails() {\r\n      try {\r\n        const userDetails = await Auth.getAuthUser();\r\n        setFirstname(userDetails.firstname);\r\n        setLastname(userDetails.lastname || \"\");\r\n        setUsername(userDetails.username);\r\n        setDob((userDetails.dob || \"\").substr(0, 10));\r\n        setGender(userDetails.gender || \"MALE\");\r\n        setIncome(userDetails.annualIncome || \"\");\r\n        setContact(userDetails.contact || \"\");\r\n        setAddress(userDetails.address || \"\");\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      }\r\n    }\r\n\r\n    if (username.length === 0) {\r\n      getUserDetails();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    setUsername(firstname + \" \" + lastname);\r\n  }, [firstname, lastname]);\r\n\r\n  const doUpdateUser = async () => {\r\n    try {\r\n      setIsVerifying(true);\r\n      const responseCode = await Auth.updateUser(\r\n        firstname,\r\n        lastname,\r\n        dob,\r\n        income,\r\n        address,\r\n        contact,\r\n        gender\r\n      );\r\n      responseCode === 200 && alert(\"User updated successfully\");\r\n      setIsVerifying(false);\r\n    } catch (err: any) {\r\n      setIsVerifying(false);\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\r\n        <div className=\"col-md-12 d-flex flex-column p-0\">\r\n          <div\r\n            className=\"d-flex flex-column justify-content-center align-items-center\"\r\n            style={{ flexGrow: 14 }}\r\n          >\r\n            <div className=\"user-form\">\r\n              <h6 className=\"font-weight-bold mb-3\">Update Details</h6>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label className=\"text-secondary\">Firstname</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={firstname}\r\n                    onChange={(ev) => doUpdateFields(ev, setFirstname)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                  <label className=\"text-secondary\">Lastname</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={lastname}\r\n                    onChange={(ev) => doUpdateFields(ev, setLastname)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Username</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={username}\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"form-group col\">\r\n                  <label className=\"text-secondary\">Date of Birth</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    value={dob}\r\n                    onChange={(ev) => doUpdateFields(ev, setDob)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col\">\r\n                  <label className=\"text-secondary\">Annual Income</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={income}\r\n                    onChange={(ev) => setIncome(ev.target.valueAsNumber)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Gender</label>\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"gender\"\r\n                    value={\"MALE\"}\r\n                    onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                    checked={gender === \"MALE\"}\r\n                    required\r\n                  />\r\n                  <label className=\"text-secondary form-check-label\">M</label>\r\n                </div>\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    className=\"form-check-input\"\r\n                    name=\"gender\"\r\n                    value={\"FEMALE\"}\r\n                    checked={gender === \"FEMALE\"}\r\n                    onChange={(ev) => doUpdateFields(ev, setGender)}\r\n                    required\r\n                  />\r\n                  <label className=\"text-secondary form-check-label\">F</label>\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Contact</label>\r\n                <input\r\n                  type=\"tel\"\r\n                  className=\"form-control\"\r\n                  value={contact}\r\n                  onChange={(ev) => doUpdateFields(ev, setContact)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Address</label>\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  value={address}\r\n                  rows={3}\r\n                  onChange={(ev) => doUpdateFields(ev, setAddress)}\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\r\n                  onClick={doUpdateUser}\r\n                >\r\n                  Update my info\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useState, Fragment } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* TS Import */\r\nimport { Auth } from \"../../../services/auth.services\";\r\n\r\n/* CSS Import */\r\nimport \"./Password.css\";\r\n\r\nconst Password: React.FC = () => {\r\n  const [oldP, setOldP] = useState<string>(\"\");\r\n  const [newP, setNewP] = useState<string>(\"\");\r\n  const [confP, setConfP] = useState<string>(\"\");\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(false);\r\n\r\n  const doUpdatePwd = async () => {\r\n    if (oldP && newP && confP && newP === confP) {\r\n      try {\r\n        setIsVerifying(true);\r\n        const responseCode = await Auth.updatePassword(oldP, newP, confP);\r\n        responseCode === 200 && alert(\"Password updated successfully\");\r\n        setIsVerifying(false)\r\n      } catch (err: any) {\r\n        const message = err?.message;\r\n        setIsVerifying(false);\r\n        setConfP(\"\");\r\n        setNewP(\"\");\r\n        setOldP(\"\");\r\n        if (message) {\r\n          alert(message);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <div className=\"container-fluid d-flex flex-row row h-100 m-0 p-0\">\r\n        <div className=\"col-md-12 d-flex flex-column p-0\">\r\n          <div\r\n            className=\"d-flex flex-column justify-content-center align-items-center\"\r\n            style={{ flexGrow: 14 }}\r\n          >\r\n            <div className=\"login-form\">\r\n              <h6 className=\"font-weight-bold mb-3\">Update Password</h6>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Old Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  value={oldP}\r\n                  onChange={(ev) => doUpdateFields(ev, setOldP)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">New Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  value={newP}\r\n                  onChange={(ev) => doUpdateFields(ev, setNewP)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Confirm Password</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={confP}\r\n                  onChange={(ev) => doUpdateFields(ev, setConfP)}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn bg-primary form-control mt-4 mb-2 text-white login-button\"\r\n                  onClick={doUpdatePwd}\r\n                >\r\n                  Update Password\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarCheck,\r\n  faDog,\r\n  faIdBadge,\r\n  faPaw,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* JS Import */\r\nimport {\r\n  URL_PET_USERS_ADOPT,\r\n  URL_PET_USERS_APPT,\r\n  URL_PET_USERS_LICENSE,\r\n  URL_PET_USERS_PETS,\r\n} from \"../../../config/UrlRoute\";\r\n\r\n/* CSS Import */\r\nimport \"./ClientHeader.css\";\r\n\r\nconst ClientHeader: React.FC = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column h-100 p-2\"\r\n      style={{\r\n        backgroundColor: \"var(--dark-primary-transparent)\",\r\n      }}\r\n    >\r\n      <div className=\"header-navigation\">\r\n        <div className=\"list-group\">\r\n          <NavLink\r\n            to={URL_PET_USERS_PETS}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faPaw} size=\"1x\" />\r\n            </span>\r\n            My Pets\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_USERS_ADOPT}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faDog} size=\"1x\" />\r\n            </span>\r\n            Adopt Pets\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_USERS_LICENSE}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faIdBadge} size=\"1x\" />\r\n            </span>\r\n            License\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_USERS_APPT}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faCalendarCheck} size=\"1x\" />\r\n            </span>\r\n            Appointments\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientHeader;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetAdopt.css\";\r\nimport { adoptNewPet, getUnadoptedPets } from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\nimport { faDog } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PetAdopt: React.FC = () => {\r\n  const [pets, setPets] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    async function getUnadoptedPet() {\r\n      try {\r\n        const cli: any = await getUnadoptedPets();\r\n        setPets(cli);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (pets.length === 0 && !isFetched) {\r\n      getUnadoptedPet();\r\n    }\r\n  });\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={pets.length}\r\n        icon={faDog}\r\n        placeholder=\"No pets available to adopt\"\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Unadopted Pets</h3>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Weight (in grams)</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">Age (in months)</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pets.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{t.petName}</td>\r\n                    <td>{t.weight}</td>\r\n                    <td>{t.gender}</td>\r\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\r\n                    <td>{getMonths(t.dob)}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"bg-primary text-white btn\"\r\n                        onClick={async () => {\r\n                          await adoptNewPet(t.id);\r\n                          setIsFetched(false);\r\n                          setPets([]);\r\n                        }}\r\n                      >\r\n                        Adopt\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetAdopt);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./MyPet.css\";\r\nimport { getMyPets, updatePet } from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faEdit,\r\n  faInfoCircle,\r\n  faPaw,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst MyPet: React.FC = () => {\r\n  const [pets, setPets] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [petId, setPetId] = useState<number>(0);\r\n  const [petName, setPetName] = useState<string>(\"\");\r\n  const [petWeight, setPetWeight] = useState<0>(0);\r\n\r\n  useEffect(() => {\r\n    async function getPets() {\r\n      try {\r\n        const cli: any = await getMyPets();\r\n        setPets(cli);\r\n        setIsVerifying(false);\r\n        setMode(\"\");\r\n        setPetId(0);\r\n        setPetName(\"\");\r\n        setPetWeight(0);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (pets.length === 0 && !isFetched) {\r\n      getPets();\r\n    }\r\n  });\r\n\r\n  const doUpdatePet = async () => {\r\n    if (mode === \"EDIT\") {\r\n      await updatePet(petId, petName, petWeight);\r\n      setIsFetched(false);\r\n      setPets([]);\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={pets.length}\r\n        icon={faPaw}\r\n        placeholder=\"You no longer own any pets\"\r\n        secPlaceholder={'To adopt a pet, visit \"Adopt Pets\"'}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>My Pets</h3>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Weight (in grams)</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">License</th>\r\n                  <th scope=\"col\">License Expires At</th>\r\n                  <th scope=\"col\">Age (in months)</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pets.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>\r\n                      {t.petName}\r\n                      &nbsp;\r\n                      <FontAwesomeIcon\r\n                        icon={faInfoCircle}\r\n                        title={\"Pet ID: \" + t.id}\r\n                      />\r\n                    </td>\r\n                    <td>{t.weight}</td>\r\n                    <td>{t.gender}</td>\r\n                    <td className=\"text-capitalize\">{t.petCategory.name}</td>\r\n                    <td className=\"text-capitalize\">\r\n                      {t.isLicensed ? (\r\n                        <FontAwesomeIcon\r\n                          icon={faCheck}\r\n                          color=\"green\"\r\n                          title={\r\n                            t.licenseForm && t.licenseForm.licenseNo\r\n                              ? t.licenseForm.licenseNo\r\n                              : \"-\"\r\n                          }\r\n                          onClick={() =>\r\n                            navigator.clipboard.writeText(\r\n                              t.licenseForm.licenseNo\r\n                            )\r\n                          }\r\n                        />\r\n                      ) : (\r\n                        <FontAwesomeIcon icon={faTimes} color=\"red\" />\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {t.licenseForm && t.licenseForm.expiresOn\r\n                        ? t.licenseForm.expiresOn.substr(0, 10)\r\n                        : \"-\"}\r\n                    </td>\r\n                    <td>{getMonths(t.dob)}</td>\r\n                    <td>\r\n                      <button\r\n                        className=\"bg-primary text-white btn\"\r\n                        onClick={() => {\r\n                          setMode(\"EDIT\");\r\n                          setPetId(t.id);\r\n                          setPetName(t.petName);\r\n                          setPetWeight(t.weight);\r\n                        }}\r\n                        data-toggle=\"modal\"\r\n                        data-target=\"#petModal\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                        &nbsp; Update\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <Modal\r\n            title={mode === \"EDIT\" && \"Update Pet\"}\r\n            submitText={mode === \"EDIT\" && \"Update\"}\r\n            doSubmit={doUpdatePet}\r\n          >\r\n            {mode === \"EDIT\" && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet #</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    disabled\r\n                    className=\"form-control\"\r\n                    value={petId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={petName}\r\n                    onChange={(ev) => doUpdateFields(ev, setPetName)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet Weight</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={petWeight}\r\n                    onChange={(ev) => setPetWeight(ev.target.valueAsNumber)}\r\n                    required\r\n                  />\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Modal>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(MyPet);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetLicense.css\";\r\nimport { applyPetLicense, getMyPets } from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faBook,\r\n  faHourglassHalf,\r\n  faIdBadge,\r\n  faInfoCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst MyPet: React.FC = () => {\r\n  const [pets, setPets] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [petId, setPetId] = useState<number>(0);\r\n  const [petName, setPetName] = useState<string>(\"\");\r\n  const [desc, setDesc] = useState<string>(\"\");\r\n  const [licenseCost, setLicenseCost] = useState<0>(0);\r\n\r\n  useEffect(() => {\r\n    async function getPets() {\r\n      try {\r\n        const cli: any = await getMyPets();\r\n        setPets(cli);\r\n        setIsVerifying(false);\r\n        setMode(\"\");\r\n        setPetId(0);\r\n        setPetName(\"\");\r\n        setLicenseCost(0);\r\n        setDesc(\"\");\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (pets.length === 0 && !isFetched) {\r\n      getPets();\r\n    }\r\n  });\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  const doApplyLicense = async () => {\r\n    if (mode === \"EDIT\") {\r\n      await applyPetLicense(petId, licenseCost, desc);\r\n      setIsFetched(false);\r\n      setPets([]);\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const doUpdateFields = (\r\n    ev: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\r\n    updateFn: React.Dispatch<React.SetStateAction<string>>\r\n  ) => {\r\n    updateFn(ev.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={pets.length}\r\n        icon={faIdBadge}\r\n        placeholder=\"You no longer own any pets to apply for license\"\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>Apply Pet License</h3>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Weight (in grams)</th>\r\n                  <th scope=\"col\">Gender</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">License Cost</th>\r\n                  <th scope=\"col\">Age (in months)</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {pets\r\n                  .filter((p) => !p.isLicensed)\r\n                  .map((t, i) => (\r\n                    <tr key={t.id}>\r\n                      <th scope=\"row\">{i + 1}</th>\r\n                      <td>\r\n                        {t.petName}\r\n                        &nbsp;\r\n                        <FontAwesomeIcon\r\n                          icon={faInfoCircle}\r\n                          title={\"Pet ID: \" + t.id}\r\n                        />\r\n                      </td>\r\n                      <td>{t.weight}</td>\r\n                      <td>{t.gender}</td>\r\n                      <td className=\"text-capitalize\">{t.petCategory.name}</td>\r\n                      <td className=\"text-capitalize\">\r\n                        {t.petCategory.licenseCost}\r\n                      </td>\r\n                      <td>{getMonths(t.dob)}</td>\r\n                      <td>\r\n                        {(t.licenseForm === null ||\r\n                          (t.licenseForm !== null &&\r\n                            !t.licenseForm.isActive)) && (\r\n                          <button\r\n                            className=\"bg-primary text-white btn\"\r\n                            onClick={() => {\r\n                              setMode(\"EDIT\");\r\n                              setPetId(t.id);\r\n                              setPetName(t.petName);\r\n                              setLicenseCost(t.petCategory.licenseCost);\r\n                              setDesc(\"\");\r\n                            }}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#petModal\"\r\n                          >\r\n                            <FontAwesomeIcon icon={faBook} />\r\n                            &nbsp; Apply License\r\n                          </button>\r\n                        )}\r\n                        {t.licenseForm !== null && t.licenseForm.isActive && (\r\n                          <button\r\n                            className=\"bg-secondary text-white btn\"\r\n                            style={{ cursor: \"none\" }}\r\n                            disabled\r\n                          >\r\n                            <FontAwesomeIcon icon={faHourglassHalf} />\r\n                            &nbsp; License Awaiting\r\n                          </button>\r\n                        )}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <Modal\r\n            title={mode === \"EDIT\" && \"Apply for License\"}\r\n            submitText={mode === \"EDIT\" && \"Apply\"}\r\n            doSubmit={doApplyLicense}\r\n          >\r\n            {mode === \"EDIT\" && (\r\n              <Fragment>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet #</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    disabled\r\n                    className=\"form-control\"\r\n                    value={petId}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Pet Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={petName}\r\n                    onChange={(ev) => doUpdateFields(ev, setPetName)}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">License Cost</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control\"\r\n                    value={licenseCost}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Remarks</label>\r\n                  <textarea\r\n                    rows={5}\r\n                    className=\"form-control\"\r\n                    value={desc}\r\n                    onChange={(ev) => doUpdateFields(ev, setDesc)}\r\n                  ></textarea>\r\n                </div>\r\n              </Fragment>\r\n            )}\r\n          </Modal>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(MyPet);\r\n","export const getReportHtml = (appt: any) => {\r\n  let medicine = \"\";\r\n  let medicineCost = 0;\r\n  let vaccine = \"\";\r\n  let vaccineCost = 0;\r\n  let grooming = \"\";\r\n  let groomingCost = 0;\r\n  let pres: any = JSON.parse(appt.tabletPrescribed);\r\n  if (appt.isConsult) {\r\n    let medicineEl = pres.medicine\r\n      .map((m: any) => {\r\n        medicineCost += m.cost;\r\n        return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\r\n          <div>\r\n            <h6 class=\"my-0 text-capitalize\">${m.medicine} (${m.count})</h6>\r\n            <small class=\"text-body-secondary\">\r\n              ${m.mrng} &nbsp; ${m.noon} &nbsp; ${m.evng} &nbsp; ${m.ngt}\r\n            </small>\r\n          </div>\r\n          <span class=\"text-body-secondary\">${m.cost}</span>\r\n        </li>`;\r\n      })\r\n      .join(\"\");\r\n    medicine = `<div>\r\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <span class=\"text-dark\">Medicine</span>\r\n      </h4>\r\n      <ul class=\"list-group mb-3\">\r\n        ${medicineEl}\r\n        <li class=\"list-group-item d-flex justify-content-between\">\r\n          <span>Total</span>\r\n          <strong>${medicineCost}</strong>\r\n        </li>\r\n      </ul>\r\n    </div>`;\r\n  }\r\n\r\n  if (appt.isVaccine) {\r\n    let vaccineEl = pres.vaccine\r\n      .map((v: any) => {\r\n        vaccineCost += v.cost;\r\n        return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\r\n          <div>\r\n            <h6 class=\"my-0 text-capitalize\">${v.name}</h6>\r\n          </div>\r\n          <span class=\"text-body-secondary\">${v.cost}</span>\r\n        </li>`;\r\n      })\r\n      .join(\"\");\r\n    vaccine = `<div>\r\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <span class=\"text-dark\">Vaccine</span>\r\n      </h4>\r\n      <ul class=\"list-group mb-3\">\r\n        ${vaccineEl}\r\n        <li class=\"list-group-item d-flex justify-content-between\">\r\n          <span>Total</span>\r\n          <strong>${vaccineCost}</strong>\r\n        </li>\r\n      </ul>\r\n    </div>`;\r\n  }\r\n\r\n  if (appt.isGrooming) {\r\n    let groomingEl = pres.grooming\r\n      .map((g: any) => {\r\n        groomingCost += g.cost;\r\n        return `<li class=\"list-group-item d-flex justify-content-between lh-sm\">\r\n          <div>\r\n            <h6 class=\"my-0 text-capitalize\">${g.name}</h6>\r\n          </div>\r\n          <span class=\"text-body-secondary\">${g.cost}</span>\r\n        </li>`;\r\n      })\r\n      .join(\"\");\r\n    grooming = `<div>\r\n      <h4 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <span class=\"text-dark\">Grooming</span>\r\n      </h4>\r\n      <ul class=\"list-group mb-3\">\r\n        ${groomingEl}\r\n        <li class=\"list-group-item d-flex justify-content-between\">\r\n          <span>Total</span>\r\n          <strong>${groomingCost}</strong>\r\n        </li>\r\n      </ul>\r\n    </div>`;\r\n  }\r\n  return `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Report</title>\r\n    <link\r\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\"\r\n      rel=\"stylesheet\"\r\n      integrity=\"sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH\"\r\n      crossorigin=\"anonymous\"\r\n    />\r\n  </head>\r\n  <body class=\"bg-body-tertiary\">\r\n    <div class=\"container\">\r\n      <main>\r\n        <div class=\"py-5 text-center\">\r\n          <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!-- Generator: Gravit.io --><svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\"\r\n            style=\"isolation: isolate\"\r\n            viewBox=\"0 0 500 500\"\r\n            width=\"72pt\"\r\n            height=\"72pt\"\r\n          >\r\n            <defs>\r\n              <clipPath id=\"_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3\">\r\n                <rect width=\"500\" height=\"500\" />\r\n              </clipPath>\r\n            </defs>\r\n            <g clip-path=\"url(#_clipPath_ssBScvuVJJEsMy1wdSQvwRtlyZTvsNL3)\">\r\n              <g>\r\n                <circle\r\n                  vector-effect=\"non-scaling-stroke\"\r\n                  cx=\"250\"\r\n                  cy=\"250\"\r\n                  r=\"158.25\"\r\n                  fill=\"rgb(220,229,222)\"\r\n                />\r\n                <g>\r\n                  <path\r\n                    d=\" M 434.546 382.995 C 434.154 381.261 433.915 379.097 432.921 378.499 C 431.927 377.9 430.062 377.715 429.359 376.981 C 428.656 376.247 427.555 374.063 427.3 372.62 C 427.045 371.175 426.343 370.441 425.681 367.837 C 425.286 366.277 425.28 364.133 425.087 362.31 C 424.957 361.086 424.798 360.195 424.582 359.182 L 425.092 359.961 C 425.092 359.961 425.878 359.115 425.921 357.198 C 425.963 355.323 425.855 353.744 425.897 351.876 C 425.939 350.007 426.291 347.138 426.033 345.838 L 426.628 347.099 C 426.628 347.099 427.575 345.49 427.471 343.762 C 427.366 342.034 427.819 336.817 427.576 334.799 C 427.334 332.78 426.765 332.479 427.376 330.911 C 427.986 329.342 429.044 327.065 429.247 324.48 C 429.449 321.896 429.394 311.539 428.315 308.35 C 427.235 305.161 425.473 300.375 425.225 298.644 C 424.976 296.912 424.914 293.315 423.824 290.558 C 422.736 287.8 422.484 286.213 420.242 283.573 C 418 280.934 417.604 279.343 416.336 278.164 C 415.068 276.984 413.839 274.079 412.741 271.754 C 411.642 269.428 410.832 267.108 410.005 265.507 C 409.177 263.907 409.641 262.479 409.964 260.904 C 410.287 259.329 411.878 258.933 411.878 258.933 L 410.872 258.911 C 410.872 258.911 411.045 257.621 412.502 256.79 C 413.959 255.96 416.697 255.734 417.693 256.187 C 418.69 256.642 420.111 257.393 420.111 257.393 L 419.855 255.949 C 419.855 255.949 420.996 256.59 422.044 257.564 C 422.43 257.921 422.768 258.652 423.423 259.386 C 424.077 260.12 425.075 260.525 425.075 260.525 L 424.992 259.996 C 424.992 259.996 425.747 260.697 426.511 260.927 C 427.039 261.085 427.621 261.241 428.078 261.312 C 430.228 261.648 431.009 261.042 431.009 261.042 L 430.404 260.214 C 430.404 260.214 431.64 260.672 431.919 261.11 C 431.919 261.11 432.561 260.262 432.462 258.246 C 432.364 256.23 431.955 255.214 431.119 254.044 L 431.758 254.418 C 431.758 254.418 430.195 250.356 427.926 248.939 C 425.656 247.52 423.944 246.907 423.944 246.907 C 423.944 246.907 425.107 246.358 425.462 246.582 C 425.462 246.582 421.997 243.987 417.825 243.964 C 413.655 243.942 411.343 244.394 411.343 244.394 L 411.935 243.616 C 411.935 243.616 409.355 243.199 405.215 245.048 C 401.074 246.897 399.341 250.381 399.341 250.381 L 399.233 248.796 C 399.233 248.796 397.35 249.4 396.373 254.485 C 395.395 259.569 395.14 264.525 395.887 266.484 C 395.887 266.484 394.977 265.385 394.841 265.023 C 394.841 265.023 394.202 267.885 395.012 270.205 C 395.823 272.524 398.2 275.527 398.2 275.527 C 398.2 275.527 395.409 274.913 393.212 274.576 C 391.014 274.239 381.813 274.032 378.452 274.244 C 375.091 274.455 371.856 273.327 368.495 273.54 C 365.134 273.752 361.372 274.722 361.372 274.722 C 361.372 274.722 357.492 272.43 355.002 272.278 C 352.513 272.126 349.53 272.538 349.53 272.538 C 349.53 272.538 347.84 270.966 345.454 270.433 C 343.07 269.9 340.398 269.265 340.398 269.265 C 340.398 269.265 341.844 268.913 342.514 269.025 C 342.514 269.025 341.474 268.331 339.187 267.704 C 336.9 267.078 336.163 265.718 334.917 265.69 C 333.671 265.662 331.507 263.792 331.507 263.792 C 331.507 263.792 327.905 261.984 326.571 261.571 C 325.238 261.157 324.214 259.792 322.983 259.093 C 321.752 258.394 313.193 251.01 309.914 251.799 C 306.637 252.588 306.948 255.76 307.071 258.83 C 307.164 261.146 307.487 265.935 307.487 265.935 C 307.487 265.935 304.555 268.363 303.179 269.866 C 301.803 271.369 300.908 272.788 300.008 274.397 C 299.109 276.007 297.82 277.896 297.391 279.899 C 296.963 281.904 296.616 284.484 296.616 284.484 C 296.616 284.484 288.44 285.643 285.678 289.032 C 282.917 292.422 287.286 294.246 289.361 295.827 C 291.435 297.408 296.176 299.816 296.176 299.816 C 296.176 299.816 297.418 304.255 298.333 306.193 C 298.946 307.492 300.666 309.244 302.011 310.842 C 301.741 311.05 301.468 311.266 301.194 311.501 C 300.839 311.83 300.44 312.134 300.094 312.51 C 299.743 312.871 299.36 313.245 299.039 313.637 C 298.374 314.45 297.799 315.296 297.285 316.112 C 297.256 316.159 297.229 316.204 297.201 316.25 C 296.982 316.324 296.767 316.394 296.565 316.454 C 295.909 316.641 295.358 316.8 294.966 316.89 C 294.574 316.981 294.35 317.034 294.35 317.034 C 294.35 317.034 294.582 317.042 294.985 317.012 C 295.387 316.978 295.967 316.934 296.648 316.793 C 296.729 316.776 296.817 316.757 296.902 316.74 C 296.553 317.329 296.246 317.89 295.971 318.388 C 295.6 319.062 295.332 319.645 295.135 320.046 C 294.942 320.451 294.843 320.688 294.843 320.688 C 294.843 320.688 295.405 319.834 296.248 318.554 C 296.626 317.965 297.085 317.298 297.573 316.587 C 297.631 316.572 297.687 316.561 297.746 316.545 C 298.135 316.449 298.535 316.312 298.947 316.162 C 299.36 316.015 299.773 315.825 300.186 315.617 C 300.604 315.408 301.016 315.151 301.383 314.89 C 301.777 314.608 302.131 314.317 302.475 314.006 C 302.812 313.694 303.136 313.379 303.431 313.058 C 303.461 313.025 303.488 312.993 303.517 312.96 C 303.528 312.98 303.541 313.002 303.551 313.022 C 303.721 313.383 303.999 313.705 304.351 313.996 C 304.307 314.097 304.262 314.196 304.215 314.298 C 304.064 314.692 303.904 315.101 303.778 315.53 C 303.729 315.751 303.678 315.974 303.629 316.197 L 303.592 316.365 C 303.585 316.4 303.58 316.406 303.572 316.465 L 303.564 316.547 L 303.536 316.878 C 303.49 317.313 303.498 317.771 303.509 318.223 C 303.509 318.676 303.575 319.098 303.603 319.518 C 303.695 320.348 303.808 321.115 303.903 321.77 C 303.939 322.097 303.998 322.398 304.02 322.664 C 304.042 322.93 304.073 323.164 304.078 323.356 C 304.068 323.736 304.07 323.964 304.07 323.964 C 304.07 323.964 304.118 323.75 304.19 323.361 C 304.214 323.167 304.218 322.93 304.235 322.656 C 304.253 322.383 304.238 322.078 304.232 321.742 C 304.211 321.074 304.159 320.3 304.108 319.477 C 304.095 319.07 304.063 318.637 304.065 318.218 C 304.06 317.798 304.057 317.371 304.109 316.925 L 304.133 316.594 L 304.139 316.511 L 304.153 316.448 L 304.185 316.293 C 304.229 316.085 304.272 315.878 304.314 315.674 C 304.431 315.268 304.554 314.866 304.686 314.481 C 304.711 314.419 304.733 314.358 304.757 314.296 C 305.11 314.531 305.515 314.742 305.946 314.935 C 305.934 314.995 305.923 315.054 305.911 315.115 C 305.854 315.521 305.796 315.94 305.736 316.366 C 305.708 316.796 305.679 317.234 305.651 317.671 C 305.66 318.106 305.669 318.542 305.677 318.97 C 305.708 319.402 305.756 319.827 305.795 320.237 C 305.905 321.048 306.047 321.797 306.2 322.431 C 306.511 323.7 306.838 324.507 306.838 324.507 C 306.838 324.507 306.803 324.293 306.743 323.919 C 306.678 323.546 306.614 323.01 306.525 322.372 C 306.487 322.053 306.446 321.705 306.403 321.339 C 306.37 320.973 306.335 320.587 306.298 320.187 C 306.276 319.79 306.263 319.379 306.232 318.964 C 306.23 318.543 306.228 318.115 306.224 317.685 C 306.246 317.261 306.268 316.836 306.289 316.418 C 306.331 316 306.371 315.588 306.411 315.19 C 306.413 315.171 306.416 315.155 306.418 315.137 C 306.673 315.239 306.933 315.337 307.199 315.428 C 307.314 316.281 307.437 317.188 307.56 318.096 C 307.617 318.556 307.686 319.026 307.782 319.474 C 307.883 319.938 307.999 320.381 308.147 320.799 C 308.291 321.218 308.44 321.62 308.616 321.985 C 308.783 322.354 308.958 322.693 309.127 323.003 C 309.454 323.625 309.8 324.102 310.035 324.435 C 310.275 324.767 310.433 324.938 310.433 324.938 C 310.433 324.938 309.976 324.122 309.434 322.853 C 309.16 322.219 308.893 321.46 308.649 320.642 C 308.532 320.231 308.425 319.803 308.336 319.373 C 308.252 318.924 308.189 318.476 308.121 318.017 C 308.005 317.195 307.868 316.381 307.727 315.602 C 308.811 315.945 309.905 316.211 310.759 316.446 C 313.046 317.072 316.122 316.758 316.122 316.758 C 316.122 316.758 318.472 323.139 320.528 325.486 C 322.585 327.834 324.276 329.406 324.276 329.406 C 324.276 329.406 325.898 334.046 327.954 336.393 C 330.011 338.741 332.242 341.859 333.737 343.618 C 335.231 345.378 337.798 350.614 339.284 352.757 C 340.77 354.9 340.016 354.307 341.294 357.213 C 342.571 360.118 344.205 364.183 344.153 366.482 C 344.101 368.784 344.438 370.9 343.049 372.978 C 341.66 375.056 340.501 375.414 338.554 376.713 C 336.607 378.011 335.27 377.789 335.043 379.319 C 334.817 380.847 334.756 383.53 336.098 383.56 C 337.44 383.59 338.773 384.004 338.773 384.004 C 338.773 384.004 340.477 385.001 342.197 385.232 C 343.918 385.462 345.081 384.914 345.081 384.914 C 345.081 384.914 345.422 386.84 347.709 387.466 C 349.997 388.093 351.738 387.365 351.738 387.365 C 351.738 387.365 352.684 387.961 354.4 388.383 C 356.117 388.808 357.092 388.061 357.092 388.061 C 357.092 388.061 359.379 388.689 360.912 388.723 C 362.445 388.757 363.796 388.404 364.035 386.299 C 364.274 384.194 364.87 383.25 364.87 383.25 C 364.87 383.25 367.554 383.311 369.859 383.171 C 372.163 383.029 373.905 382.303 375.269 381.374 C 376.633 380.446 379.559 378.21 381.481 378.063 C 383.402 377.913 386.517 375.874 387.296 375.318 C 388.076 374.757 390.04 372.693 390.288 370.206 C 390.536 367.719 391.717 366.403 392.129 365.07 C 392.543 363.736 392.203 362.841 392.727 361.99 C 393.249 361.139 393.546 360.715 393.546 360.715 L 393.964 361.299 C 393.964 361.299 394.707 360.238 394.73 359.232 C 394.752 358.226 394.992 357.176 395.155 356.317 C 395.318 355.458 395.63 354.362 395.63 354.362 L 395.8 355.325 C 395.8 355.325 396.995 354.441 397.383 353.155 C 397.771 351.87 398.476 349.32 399.008 348.038 C 399.54 346.755 400.071 345.544 400.442 345.049 C 400.813 344.554 402.985 343.884 402.985 343.884 C 402.985 343.884 403.561 347.061 403.963 348.364 C 404.365 349.668 405.022 352.415 405.722 353.294 L 405.902 351.715 C 405.902 351.715 406.415 354.46 407.393 355.776 C 408.37 357.093 408.913 358.543 409.736 360.287 C 410.56 362.033 412.099 363.937 412.099 363.937 C 412.099 363.937 412.783 365.535 413.181 366.981 C 413.58 368.429 414.257 370.315 414.669 371.186 C 415.081 372.059 416.159 375.246 416.277 376.401 C 416.395 377.553 416.628 380.004 416.628 380.004 C 416.628 380.004 416.128 383.014 416.968 384.037 C 417.809 385.064 420.115 384.829 420.115 384.829 C 420.115 384.829 421.975 385.303 423.694 385.629 C 425.412 385.954 426.438 385.115 426.438 385.115 C 426.438 385.115 427.716 385.862 429.298 385.897 C 430.879 385.932 431.473 385.084 431.473 385.084 C 431.473 385.084 432.754 385.688 433.48 385.416 C 434.211 385.146 434.939 384.73 434.546 382.995 Z  M 303.098 312.727 C 302.789 313.019 302.47 313.32 302.131 313.606 C 301.79 313.886 301.431 314.173 301.075 314.422 C 300.688 314.686 300.314 314.905 299.929 315.112 C 299.54 315.32 299.141 315.497 298.754 315.666 C 298.505 315.77 298.261 315.865 298.02 315.957 C 298.478 315.305 298.958 314.634 299.482 314.009 C 299.805 313.607 300.15 313.264 300.495 312.899 C 300.829 312.534 301.201 312.211 301.537 311.878 C 301.802 311.637 302.051 311.41 302.301 311.184 C 302.689 311.66 303.03 312.118 303.289 312.54 C 303.225 312.602 303.164 312.664 303.098 312.727 Z  M 372.12 370.37 C 369.641 371.897 367.749 372.861 367.749 372.861 C 367.921 371.571 369.574 368.443 369.574 368.443 C 369.574 368.443 370.038 367.015 370.355 365.728 C 370.672 364.441 370.698 363.29 371.03 361.285 C 371.33 359.472 373.756 353.896 373.786 353.867 C 373.786 353.867 374.412 359.732 374.918 361.086 C 375.461 362.536 375.253 365.406 375.354 367.279 C 375.455 369.151 374.598 368.844 372.12 370.37 Z \"\r\n                    fill=\"rgb(0,29,68)\"\r\n                  />\r\n                  <path\r\n                    d=\" M 308.428 368.566 C 307.99 367.47 307.441 365.168 305.578 363.523 C 303.714 361.878 301.412 361.221 301.412 361.221 C 301.083 360.564 300.097 358.809 298.343 357.713 C 296.589 356.617 293.739 356.945 292.424 355.85 C 291.108 354.753 288.916 348.066 288.258 345.107 C 287.601 342.147 287.382 340.284 287.272 337.324 C 287.163 334.364 285.409 330.308 284.422 328.007 C 283.436 325.705 283.326 323.074 283.326 323.074 L 283.984 323.732 C 283.984 321.759 283.436 318.799 283.107 316.607 C 282.778 314.415 282.449 312.112 282.449 308.605 C 282.449 305.097 282.997 298.629 283.217 296.437 C 283.436 294.245 282.778 293.039 282.449 291.504 C 282.12 289.969 281.791 286.681 281.791 286.681 L 282.449 288.216 C 282.34 286.681 282.011 284.599 282.12 283.174 C 282.23 281.749 282.997 278.131 283.107 274.843 C 283.217 271.555 282.23 268.047 282.559 266.073 C 282.888 264.1 283.655 260.921 283.984 257.413 C 284.313 253.905 284.093 251.164 284.093 251.164 L 284.641 253.028 C 284.641 253.028 284.75 247.876 284.532 245.245 C 284.312 242.614 283.984 238.339 283.764 236.366 C 283.545 234.393 282.449 232.529 281.791 230.228 C 281.133 227.926 281.352 224.966 281.352 224.966 L 281.9 226.391 C 281.9 226.391 282.448 224.637 282.01 222.225 C 281.571 219.813 280.667 215.373 280.42 212.167 C 280.174 208.961 278.2 204.932 278.2 204.932 C 278.2 204.932 280.036 201.287 280.256 198.108 C 280.475 194.929 280.256 194.052 280.914 191.75 C 281.572 189.448 282.12 188.132 283.106 186.05 C 284.092 183.967 284.202 181.117 284.202 181.117 C 284.202 181.117 284.75 182.213 285.188 183.748 C 285.627 185.283 285.736 185.063 285.517 188.462 C 285.298 191.86 286.394 197.779 287.052 198.875 C 287.71 199.972 290.231 201.726 290.67 201.396 C 291.108 201.067 291.766 200.409 291.985 199.094 C 292.204 197.778 291.546 193.284 291.656 192.517 C 291.766 191.75 294.945 189.777 296.041 188.242 C 297.137 186.707 296.37 184.625 295.603 182.432 C 294.836 180.24 294.617 177.389 294.178 174.978 C 293.739 172.567 291.547 168.181 290.341 165.77 C 289.135 163.358 287.272 160.07 286.395 158.644 C 285.518 157.219 285.079 154.478 284.532 152.067 C 283.984 149.655 281.024 147.682 280.147 146.476 C 279.27 145.27 276.858 142.858 275.324 142.201 C 273.789 141.543 272.693 142.31 272.693 142.31 C 271.871 140.447 267.267 136.938 262.991 135.458 C 258.716 133.979 252.797 133.156 252.797 133.156 C 252.797 133.156 247.535 131.841 240.464 133.485 C 233.394 135.13 228.954 139.734 228.954 139.734 C 228.954 139.734 225.665 140.227 223.035 141.049 C 220.404 141.871 216.787 143.844 214.156 147.133 C 211.525 150.422 211.525 151.244 209.881 154.697 C 208.236 158.15 202.81 162.425 201.002 165.056 C 199.193 167.687 198.864 169.495 199.357 172.949 C 199.85 176.402 199.85 177.224 200.015 180.349 C 200.18 183.473 205.77 189.722 208.072 191.694 C 210.374 193.668 211.361 193.668 212.018 196.133 C 212.676 198.6 211.853 201.724 213.498 201.231 C 214.208 201.018 215.8 198.929 216.293 197.285 C 216.504 196.582 217.559 194.966 217.938 193.668 C 218.445 191.932 217.445 185.117 217.445 185.117 C 217.445 185.23 217.938 187.09 218.925 189.064 C 219.911 191.037 220.076 190.543 220.569 192.681 C 221.062 194.819 219.443 196.54 219.089 197.285 C 218.323 198.893 215.827 201.369 215.142 202.054 C 213.663 203.534 211.524 204.685 208.894 208.467 C 206.263 212.249 202.152 215.538 199.357 219.32 C 196.562 223.102 193.931 231.159 193.931 231.159 C 193.931 231.159 188.833 234.941 184.394 239.709 C 179.955 244.478 178.146 250.397 173.213 255.494 C 168.28 260.591 158.414 269.471 155.948 272.759 C 153.481 276.048 146.082 283.118 142.629 286.078 C 139.176 289.038 135.723 293.642 131.612 299.232 C 127.502 304.823 121.746 317.648 121.746 317.648 C 121.746 317.648 117.964 323.897 115.333 328.501 C 112.702 333.105 112.702 341.82 112.373 342.313 C 112.044 342.806 110.728 345.273 109.742 345.108 C 108.756 344.944 102.507 347.41 98.889 348.397 C 95.272 349.383 90.339 349.383 87.707 349.219 C 85.077 349.054 79.321 349.877 76.526 349.712 C 73.73 349.548 70.935 348.232 70.935 348.232 C 70.935 348.232 66.496 347.081 62.549 346.753 C 58.602 346.424 51.367 347.903 51.367 347.903 C 50.38 347.574 45.119 347.739 41.501 349.054 C 40.206 349.525 38.925 349.766 37.665 350.369 C 36.404 350.972 35.527 351.959 35.527 351.959 L 36.13 351.904 C 36.13 351.904 35.47 352.357 34.924 352.78 C 34.378 353.203 34.126 353.656 34.047 353.876 C 33.857 354.407 34.166 354.934 34.595 355.63 C 34.977 356.25 36.055 357.676 36.055 357.676 L 35.417 357.494 C 35.417 357.494 36.283 358.687 36.897 359.083 C 37.499 359.472 38.615 359.831 38.815 360.015 C 40.788 361.824 45.611 362.207 45.611 362.207 C 45.611 362.207 49.064 363.029 51.366 364.509 C 53.668 365.989 57.943 367.634 65.178 367.798 C 72.413 367.962 73.235 367.798 73.235 367.798 L 71.591 368.456 C 71.591 368.456 72.742 369.278 78.168 370.429 C 83.594 371.579 91.322 370.1 96.42 369.443 C 101.517 368.785 109.739 367.634 109.739 367.634 C 109.739 367.634 110.397 368.784 112.863 370.265 C 115.329 371.744 124.373 373.389 124.373 373.389 C 124.373 373.389 123.715 375.363 127.004 377.335 C 130.293 379.308 131.444 380.295 136.212 379.802 C 140.98 379.308 160.219 382.268 168.441 382.268 C 176.663 382.268 190.31 382.433 193.27 382.761 C 196.23 383.09 197.216 384.57 199.354 385.392 C 201.492 386.214 205.273 385.392 205.273 385.392 C 207.575 386.05 208.397 385.556 209.713 385.392 C 211.028 385.228 211.686 383.583 211.686 383.583 C 212.179 383.748 214.317 383.419 215.139 382.926 C 215.961 382.433 215.961 380.295 214.646 378.65 C 213.331 377.007 211.851 377.336 210.7 376.349 C 209.549 375.363 208.233 374.704 205.109 373.718 C 201.985 372.732 198.696 370.21 198.696 370.21 C 199.354 369.991 202.313 368.784 203.958 368.675 C 205.602 368.566 208.014 367.579 209.549 366.373 C 211.084 365.167 211.522 363.961 213.166 361.44 C 214.575 359.28 214.856 357.366 214.909 356.86 C 214.909 356.814 214.913 356.769 214.92 356.726 C 214.92 356.726 214.917 356.775 214.909 356.86 C 214.894 357.522 215.468 358.48 215.468 358.48 C 215.577 357.165 216.784 355.63 218.209 353.328 C 219.634 351.026 221.388 348.176 221.388 348.176 C 221.388 348.176 224.238 354.973 224.677 357.165 C 225.115 359.356 225.335 362.207 225.554 364.948 C 225.773 367.688 227.418 369.333 227.418 369.333 C 227.309 368.784 227.308 367.359 227.308 367.359 C 227.308 367.359 228.953 370.868 230.049 372.731 C 231.145 374.594 233.447 375.909 235.201 376.567 C 236.955 377.225 239.696 379.747 240.902 380.733 C 242.107 381.719 243.094 382.925 245.067 384.46 C 247.041 385.995 246.054 387.42 247.588 388.517 C 249.123 389.613 251.315 389.394 253.507 390.271 C 255.699 391.147 257.453 390.38 260.633 391.147 C 263.812 391.915 265.895 390.709 267.978 390.38 C 270.061 390.052 272.362 389.503 272.362 389.503 C 272.362 389.503 274.555 389.612 276.528 389.942 C 278.501 390.271 281.68 389.285 282.447 388.955 C 283.214 388.627 284.31 388.846 285.078 388.517 C 285.845 388.187 285.845 387.749 285.845 387.749 C 285.845 387.749 287.051 387.749 287.819 387.749 C 288.586 387.749 290.449 386.653 290.449 386.653 C 290.449 386.653 291.874 387.2 292.094 386.762 C 292.313 386.322 290.778 385.227 290.778 385.227 C 290.778 385.227 290.778 384.241 290.34 382.815 C 289.901 381.391 288.586 380.952 287.49 379.198 C 286.394 377.444 284.092 376.018 284.092 376.018 C 284.092 376.018 286.613 375.909 288.257 376.128 C 289.902 376.348 290.998 376.018 291.875 375.689 C 292.752 375.361 292.972 374.703 292.972 374.703 C 292.972 374.703 296.37 375.141 298.015 375.251 C 299.659 375.361 301.851 374.703 303.277 374.265 C 304.702 373.826 306.346 373.608 306.894 373.717 C 307.442 373.826 308.1 374.265 308.319 373.497 C 308.538 372.73 307.771 371.195 307.771 371.195 C 307.771 371.195 309.087 371.414 309.196 370.756 C 309.305 370.101 308.866 369.662 308.428 368.566 Z  M 274.336 372.897 C 271.869 372.239 270.225 371.911 268.252 371.088 C 266.279 370.266 265.128 369.443 263.648 366.484 C 262.168 363.524 260.195 362.702 258.879 360.236 C 257.564 357.769 257.399 355.631 257.07 352.671 C 256.741 349.711 256.412 346.258 255.425 342.97 C 254.438 339.682 253.123 338.037 252.63 334.749 C 252.137 331.46 251.151 324.718 251.151 324.718 C 255.755 322.581 259.044 318.635 259.044 318.635 C 259.044 318.635 259.044 319.786 258.879 321.43 C 258.715 323.075 259.044 324.719 259.044 324.719 C 259.373 323.897 259.702 322.582 259.702 322.582 C 259.702 323.897 260.853 326.693 261.017 328.665 C 261.182 330.638 261.072 332.228 260.578 334.695 C 260.085 337.161 261.071 339.189 261.071 339.189 L 261.674 337.654 C 261.674 337.654 261.729 341.984 262.496 344.779 C 263.264 347.574 263.647 346.753 264.798 347.903 C 265.949 349.054 266.607 349.712 267.594 352.672 C 268.58 355.632 269.403 360.401 270.225 362.867 C 271.047 365.333 271.047 366.155 272.362 368.129 C 273.678 370.102 273.185 369.444 275.651 370.102 C 278.117 370.76 280.584 373.556 280.584 373.556 C 278.94 372.567 276.802 373.555 274.336 372.897 Z \"\r\n                    fill=\"rgb(0,29,68)\"\r\n                  />\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </svg>\r\n          <h2>Pet Appointment (PAW${appt.id})</h2>\r\n          <h6>Appointment Time: ${new Date(appt.apptTime).toLocaleString()}</h6>\r\n          <p class=\"lead\">Pawsomecare</p>\r\n        </div>\r\n\r\n        <div class=\"row g-5\">\r\n          <div class=\"col-md-7 col-lg-8\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <h4 class=\"mb-3\">Pet Details</h4>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"${appt.pet.petName}\"\r\n                  />\r\n                  <label>Name</label>\r\n                </div>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"name@example.com\"\r\n                  />\r\n                  <label>Age</label>\r\n                </div>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext text-capitalize\"\r\n                    value=\"${appt.pet.petCategory.name}\"\r\n                  />\r\n                  <label>Type</label>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <h4 class=\"mb-3\">Owner Details</h4>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"${appt.user.username}\"\r\n                  />\r\n                  <label>Owner Name</label>\r\n                </div>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"${appt.user.email}\"\r\n                  />\r\n                  <label>Email</label>\r\n                </div>\r\n                <div class=\"form-floating mb-3\">\r\n                  <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"${appt.user.contact ? appt.user.contact : \"-\"}\"\r\n                  />\r\n                  <label>Contact</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <h4 class=\"mb-3\">Reason for Appointment</h4>\r\n              <p class=\"lead\">${appt.reason}</p>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <h4 class=\"mb-3\">Clinic & Doctor Details</h4>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${appt.staffDetails.username}\"\r\n                />\r\n                <label>Doctor Name</label>\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${appt.staff.id}\"\r\n                />\r\n                <label>Registration No</label>\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${appt.staff.consultFee}\"\r\n                />\r\n                <label>Doctor Fee</label>\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${appt.clinic.name}\"\r\n                />\r\n                <label>Clinic Name</label>\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                    type=\"text\"\r\n                    readonly\r\n                    class=\"form-control-plaintext\"\r\n                    value=\"${appt.clinic.address}\"\r\n                />\r\n                <label>Clinic Address</label>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n            <div>\r\n              <h4 class=\"mb-3\">Analysis & Other Details</h4>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${appt.consultDetail ? appt.consultDetail : \"-\"}\"\r\n                />\r\n                <label>Doctor Analysis</label>\r\n              </div>\r\n              <div class=\"form-floating mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  readonly\r\n                  class=\"form-control-plaintext\"\r\n                  value=\"${new Date(appt.nextVisitSuggest).toLocaleString()}\"\r\n                />\r\n                <label>Next Visit Suggestion</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5 col-lg-4 order-md-last\">\r\n            <h3 class=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <span class=\"text-dark\">Total Amount</span>\r\n              <span class=\"text-primary\">${appt.amount}</span>\r\n            </h3>\r\n            ${medicine}\r\n            ${vaccine}\r\n            ${grooming}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  </body>\r\n</html>`;\r\n};\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetAppt.css\";\r\nimport {\r\n  bookPetAppt,\r\n  getClinicStaffs,\r\n  getMyPets,\r\n  getPetAppointments,\r\n  getPetClinics,\r\n  getPetGroomings,\r\n  getPetServices,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarCheck,\r\n  faFileDownload,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Modal from \"../../../hoc-components/UI/modal/Modal\";\r\nimport { getReportHtml } from \"../../../utils/report.util\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\n\r\nconst PetAppt: React.FC = () => {\r\n  const [pets, setPets] = useState<Array<any>>([]);\r\n  const [petClinics, setPetClinics] = useState<Array<any>>([]);\r\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\r\n  const [petStaffs, setPetStaffs] = useState<Array<any>>([]);\r\n  const [petServices, setPetServices] = useState<Array<any>>([]);\r\n  const [petGrooms, setPetGrooms] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [mode, setMode] = useState<string>(\"\");\r\n  const [petId, setPetId] = useState<number>(-1);\r\n  const [clinicId, setClinicId] = useState<number>(-1);\r\n  const [staffId, setStaffId] = useState<number>(-1);\r\n  const [staffRole, setStaffRole] = useState<string>(\"\");\r\n  const [service, setService] = useState<string>(\"\");\r\n  const [grooms, setGrooms] = useState<Array<number>>([]);\r\n  const [apptTime, setApptTime] = useState<string>(\"\");\r\n  const [reason, setReason] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    async function getPets() {\r\n      try {\r\n        const myPets: any = await getMyPets();\r\n        const clinics: any = await getPetClinics(\"user\");\r\n        const services: any = await getPetServices();\r\n        const appts: any = await getPetAppointments();\r\n        const grms: any = await getPetGroomings();\r\n        setPets(myPets);\r\n        setPetClinics(clinics);\r\n        setPetServices(services);\r\n        setPetAppts(appts);\r\n        setPetGrooms(grms);\r\n        setIsVerifying(false);\r\n        setMode(\"\");\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (pets.length === 0 && !isFetched) {\r\n      getPets();\r\n    }\r\n  });\r\n\r\n  const doBookAppt = async () => {\r\n    if (mode === \"BOOK\") {\r\n      await bookPetAppt(\r\n        petId,\r\n        clinicId,\r\n        staffId,\r\n        service,\r\n        apptTime,\r\n        reason,\r\n        grooms\r\n      );\r\n      setIsFetched(false);\r\n      setPets([]);\r\n      setPetId(-1);\r\n      setClinicId(-1);\r\n      setStaffId(-1);\r\n      setService(\"\");\r\n      setGrooms([]);\r\n      setApptTime(\"\");\r\n      setStaffRole(\"\");\r\n      setReason(\"\");\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const newPS = (): any[] => {\r\n    return staffRole === \"GROOMING\"\r\n      ? petServices.filter((s) => s.serviceName === \"GROOMING\")\r\n      : petServices.filter((s) => s.serviceName !== \"GROOMING\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={petAppts.length}\r\n        icon={faCalendarCheck}\r\n        placeholder={\"No appointments booked yet\"}\r\n        actionIcon={faCalendarCheck}\r\n        actionText=\"Book Appointment\"\r\n        actionCallback={() => {\r\n          setMode(\"BOOK\");\r\n        }}\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"form-group\">\r\n            <div className=\"d-flex justify-content-between\">\r\n              <h3>My Pets Appointments</h3>\r\n              <button\r\n                className=\"btn bg-primary mb-4 text-white login-button\"\r\n                data-toggle=\"modal\"\r\n                data-target=\"#petModal\"\r\n                onClick={() => {\r\n                  setMode(\"BOOK\");\r\n                }}\r\n              >\r\n                <FontAwesomeIcon icon={faCalendarCheck} />\r\n                &nbsp; Book Appointment\r\n              </button>\r\n            </div>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Pet Name</th>\r\n                  <th scope=\"col\">Pet Type</th>\r\n                  <th scope=\"col\">Clinic</th>\r\n                  <th scope=\"col\">Staff</th>\r\n                  <th scope=\"col\">Appointment Time</th>\r\n                  <th scope=\"col\">Service</th>\r\n                  <th scope=\"col\">Cost</th>\r\n                  <th scope=\"col\">Status</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {petAppts.map((t, i) => (\r\n                  <tr key={t.id}>\r\n                    <th scope=\"row\">{i + 1}</th>\r\n                    <td>{t.pet.petName}</td>\r\n                    <td className=\"text-capitalize\">\r\n                      {t.pet.petCategory.name}\r\n                    </td>\r\n                    <td>\r\n                      <strong>{t.clinic.name}</strong>\r\n                      <address>{t.clinic.address}</address>\r\n                    </td>\r\n                    <td>{t.staffDetails.username}</td>\r\n                    <td>{new Date(t.apptTime).toLocaleString()}</td>\r\n                    <td>{t.service.serviceName}</td>\r\n                    <td>{t.status === \"CLOSED\" ? t.amount : \"-\"}</td>\r\n                    <td className=\"text-capitalize\">\r\n                      <button\r\n                        className={`btn ${\r\n                          t.status === \"CLOSED\"\r\n                            ? \"btn-success\"\r\n                            : t.status === \"OPEN\"\r\n                            ? \"btn-info\"\r\n                            : \"btn-secondary\"\r\n                        }`}\r\n                        disabled\r\n                      >\r\n                        {t.status}\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"text-center\">\r\n                      <FontAwesomeIcon\r\n                        className=\"cursor-pointer\"\r\n                        icon={faFileDownload}\r\n                        color={t.status === \"CLOSED\" ? \"GREEN\" : \"BLACK\"}\r\n                        onClick={() => {\r\n                          const winUrl = URL.createObjectURL(\r\n                            new Blob([getReportHtml(t)], { type: \"text/html\" })\r\n                          );\r\n                          window.open(winUrl);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n\r\n      <Modal\r\n        title={mode === \"BOOK\" && \"Booking an appointment\"}\r\n        submitText={mode === \"BOOK\" && \"Book\"}\r\n        doSubmit={doBookAppt}\r\n      >\r\n        {mode === \"BOOK\" && (\r\n          <Fragment>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Pet Name</label>\r\n              <select\r\n                name=\"petname\"\r\n                title=\"Pet\"\r\n                className=\"form-control\"\r\n                value={petId}\r\n                onChange={(ev) => setPetId(+ev.target.value)}\r\n              >\r\n                <option value={-1}></option>\r\n                {pets.map((p) => (\r\n                  <option\r\n                    key={p.id}\r\n                    className=\"text-capitalize\"\r\n                    value={p.id}\r\n                  >{`${p.petName} (${p.petCategory.name})`}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Clinic</label>\r\n              <select\r\n                name=\"petclinic\"\r\n                title=\"Clinic\"\r\n                className=\"form-control\"\r\n                value={clinicId}\r\n                onChange={async (ev) => {\r\n                  setClinicId(+ev.target.value);\r\n                  if (+ev.target.value !== -1) {\r\n                    const staffs = await getClinicStaffs(+ev.target.value);\r\n                    setPetStaffs(staffs);\r\n                  }\r\n                }}\r\n              >\r\n                <option value={-1}></option>\r\n                {petClinics.map((c) => (\r\n                  <option className=\"text-capitalize\" value={c.id} key={c.id}>\r\n                    {c.name + \" - \" + c.address}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Staff</label>\r\n              <select\r\n                name=\"petstaff\"\r\n                title=\"Staff\"\r\n                className=\"form-control\"\r\n                value={staffId}\r\n                onChange={(ev) => {\r\n                  setStaffId(+ev.target.value);\r\n                  setStaffRole(\r\n                    petStaffs\r\n                      .filter((s) => s.staff.id === +ev.target.value)[0]\r\n                      .authorities.map((a) =>\r\n                        a[\"authority\"].replace(\"ROLE_\", \"\")\r\n                      )[0]\r\n                  );\r\n                }}\r\n              >\r\n                <option value={-1}></option>\r\n                {petStaffs.map((s) => (\r\n                  <option\r\n                    className=\"text-capitalize\"\r\n                    value={s.staff.id}\r\n                    key={s.id}\r\n                  >\r\n                    {`${s.username} (${s.staff.id}) - Fee: ${s.staff.consultFee}`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Service</label>\r\n              <select\r\n                name=\"petservice\"\r\n                title=\"Service\"\r\n                className=\"form-control\"\r\n                value={service}\r\n                onChange={(ev) => setService(ev.target.value)}\r\n              >\r\n                <option value={\"\"}></option>\r\n                {newPS().map((s) => (\r\n                  <option\r\n                    className=\"text-capitalize\"\r\n                    value={s.serviceName}\r\n                    key={s.id}\r\n                  >\r\n                    {`${s.serviceName}`}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            {service === \"GROOMING\" && (\r\n              <div className=\"form-group\">\r\n                <label className=\"text-secondary\">Grooming</label>\r\n                <select\r\n                  name=\"petgroom\"\r\n                  title=\"Grooming\"\r\n                  className=\"form-control\"\r\n                  onChange={(ev) => {\r\n                    const options = [...ev.target.selectedOptions];\r\n                    const values = options.map((option) => option.value);\r\n                    setGrooms(values);\r\n                  }}\r\n                  defaultValue={[...grooms.map((g) => g.toString())]}\r\n                  multiple\r\n                >\r\n                  {petGrooms.map((s) => (\r\n                    <option className=\"text-capitalize\" value={s.id} key={s.id}>\r\n                      {`${s.name}`}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            )}\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Appointment time</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                className=\"form-control\"\r\n                value={apptTime}\r\n                onChange={(ev) => setApptTime(ev.target.value)}\r\n                min={new Date().toISOString().slice(0, -8)}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label className=\"text-secondary\">Reason for appointment</label>\r\n              <textarea\r\n                name=\"reason\"\r\n                rows={5}\r\n                className=\"form-control\"\r\n                value={reason}\r\n                onChange={(ev) => setReason(ev.target.value)}\r\n              ></textarea>\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetAppt);\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n/* TS Import */\r\nimport {\r\n  URL_PET_USERS,\r\n  URL_PET_USERS_ADOPT,\r\n  URL_PET_USERS_APPT,\r\n  URL_PET_USERS_LICENSE,\r\n  URL_PET_USERS_PETS,\r\n} from \"../../config/UrlRoute\";\r\n\r\n/* COMPONENT Import */\r\nimport { RootState } from \"../../store/reducers\";\r\nimport { toggleSidebar } from \"../../store/actions\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { joinArrayToString } from \"../../utils/array.utils\";\r\n\r\nimport Error from \"../../hoc-components/error/Error\";\r\nimport ClientHeader from \"./header/ClientHeader\";\r\nimport PetAdopt from \"./petadopt/PetAdopt\";\r\nimport MyPet from \"./mypets/MyPet\";\r\nimport PetLicense from \"./petlicense/PetLicense\";\r\nimport PetAppt from \"./petappt/PetAppt\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  showSidebar: state.sidebar,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  toggleSidebar,\r\n});\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst PetClient: React.FC<Props> = (props) => (\r\n  <Fragment>\r\n    <div className={\"p-0 col-md-2\"}>\r\n      <ClientHeader />\r\n    </div>\r\n    <div\r\n      className={joinArrayToString([\r\n        \"p-0 overflow-hidden px-0\",\r\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\r\n      ])}\r\n    >\r\n      <Switch>\r\n        <Redirect path={URL_PET_USERS} to={URL_PET_USERS_PETS} exact />\r\n        <Route path={URL_PET_USERS_PETS}>\r\n          <MyPet />\r\n        </Route>\r\n        <Route path={URL_PET_USERS_ADOPT}>\r\n          <PetAdopt />\r\n        </Route>\r\n        <Route path={URL_PET_USERS_LICENSE}>\r\n          <PetLicense />\r\n        </Route>\r\n        <Route path={URL_PET_USERS_APPT}>\r\n          <PetAppt />\r\n        </Route>\r\n        <Route path=\"**\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default connector(PetClient);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon as FAIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCalendarCheck, faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n/* JS Import */\r\nimport {\r\n  URL_PET_STAFF_APPT,\r\n  URL_PET_STAFF_APPT_HISTORY,\r\n} from \"../../../config/UrlRoute\";\r\n\r\n/* CSS Import */\r\nimport \"./StaffHeader.css\";\r\n\r\nconst StaffHeader: React.FC = () => {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column h-100 p-2\"\r\n      style={{\r\n        backgroundColor: \"var(--dark-primary-transparent)\",\r\n      }}\r\n    >\r\n      <div className=\"header-navigation\">\r\n        <div className=\"list-group\">\r\n          <NavLink\r\n            to={URL_PET_STAFF_APPT}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faCalendarCheck} size=\"1x\" />\r\n            </span>\r\n            Appointments\r\n          </NavLink>\r\n          <NavLink\r\n            to={URL_PET_STAFF_APPT_HISTORY}\r\n            className={\"list-group-item list-group-item-action\"}\r\n            activeClassName=\"active\"\r\n          >\r\n            <span className={\"badge mr-3\"}>\r\n              <FAIcon icon={faHistory} size=\"1x\" />\r\n            </span>\r\n            History\r\n          </NavLink>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffHeader;\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./PetAppt.css\";\r\nimport {\r\n  finalAppointment,\r\n  getPetMedicines,\r\n  getPetVaccines,\r\n  getStaffPetAppointments,\r\n} from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\nimport { faCalendarCheck } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst PetAppt: React.FC = () => {\r\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\r\n  const [petMeds, setPetMeds] = useState<Array<any>>([]);\r\n  const [petVacs, setPetVacs] = useState<Array<any>>([]);\r\n  const [presMeds, setPresMeds] = useState<Array<any>>([]);\r\n  const [analysis, setAnalysis] = useState<string>(\"\");\r\n  const [nextTime, setNextTime] = useState<string>(\"\");\r\n  const [vaccine, setVaccine] = useState<number>(-1);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [appt, setAppt] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    async function getPetAppts() {\r\n      try {\r\n        const appts: any = await getStaffPetAppointments();\r\n        const meds: any = await getPetMedicines(\"staff\");\r\n        const vacs: any = await getPetVaccines(\"staff\");\r\n        setPetAppts(appts);\r\n        setPetMeds(meds);\r\n        setPetVacs(vacs);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (petAppts.length === 0 && !isFetched) {\r\n      getPetAppts();\r\n    }\r\n  });\r\n\r\n  const doFinishAppt = async () => {\r\n    if (appt != null) {\r\n      await finalAppointment(appt.id, vaccine, analysis, nextTime, presMeds);\r\n      setIsFetched(false);\r\n      setPetAppts([]);\r\n      setAppt(null);\r\n      setAnalysis(\"\");\r\n      setNextTime(\"\");\r\n      setVaccine(-1);\r\n      setPresMeds([]);\r\n      document.getElementById(\"petModal\")?.classList.remove(\"show\");\r\n      document.querySelector(\".modal-backdrop\")?.remove();\r\n    }\r\n  };\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={petAppts.length}\r\n        icon={faCalendarCheck}\r\n        placeholder=\"You don't have any active appointments\"\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <h3>My Appointments</h3>\r\n              <table className=\"table table-bordered\">\r\n                <tbody>\r\n                  {petAppts\r\n                    .filter((p) => p.status !== \"CLOSED\")\r\n                    .map((t, i) => (\r\n                      <tr key={t.id}>\r\n                        <td\r\n                          className={`cursor-pointer pet-select ${\r\n                            appt !== null && appt.id === t.id\r\n                              ? \"pet-select-focus\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => {\r\n                            setAppt(t);\r\n                          }}\r\n                        >\r\n                          <strong>{`${i + 1}. ${\r\n                            t.pet.petName\r\n                          } (${t.pet.petCategory.name.toUpperCase()})`}</strong>\r\n                          <section>{\"Owner: \" + t.user.username}</section>\r\n                          <section>\r\n                            {\"Pet Age (in months): \" + getMonths(t.pet.dob)}\r\n                          </section>\r\n                          <section\r\n                            className=\"text-truncate\"\r\n                            style={{ width: \"300px\" }}\r\n                          >\r\n                            {t.reason}\r\n                          </section>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {appt && (\r\n              <div className=\"col-8\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                  <button className=\"btn btn-success\" onClick={doFinishAppt}>\r\n                    Finish Appointment\r\n                  </button>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">\r\n                    Reason for Appointment\r\n                  </label>\r\n                  <textarea\r\n                    name=\"reason\"\r\n                    className=\"form-control\"\r\n                    rows={3}\r\n                    value={appt.reason}\r\n                    disabled\r\n                  ></textarea>\r\n                </div>\r\n                {appt.isVaccine && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Vaccine</label>\r\n                    <select\r\n                      name=\"petvaccine\"\r\n                      title=\"Vaccine\"\r\n                      className=\"form-control\"\r\n                      onChange={(ev) => {\r\n                        setVaccine(+ev.target.value);\r\n                      }}\r\n                    >\r\n                      <option value={-1}></option>\r\n                      {petVacs.map((s) => (\r\n                        <option\r\n                          className=\"text-capitalize\"\r\n                          value={s.id}\r\n                          key={s.id}\r\n                        >\r\n                          {`${s.name}`}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                {appt.isConsult && (\r\n                  <Fragment>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"text-secondary\">Medicine</label>\r\n                      <select\r\n                        name=\"petmedicine\"\r\n                        title=\"Medicine\"\r\n                        className=\"form-control\"\r\n                        onChange={(ev) => {\r\n                          const options = [...ev.target.selectedOptions];\r\n                          const values = options.map((option) => {\r\n                            const med = petMeds.find((m) => {\r\n                              return m.id === +option.value;\r\n                            });\r\n                            med.mrng = 0;\r\n                            med.evng = 0;\r\n                            med.noon = 0;\r\n                            med.night = 0;\r\n                            med.nos = 0;\r\n                            return med;\r\n                          });\r\n                          setPresMeds(values);\r\n                        }}\r\n                        // defaultValue={[...grooms.map((g) => g.toString())]}\r\n                        multiple\r\n                      >\r\n                        {petMeds.map((s) => (\r\n                          <option\r\n                            className=\"text-capitalize\"\r\n                            value={s.id}\r\n                            key={s.id}\r\n                          >\r\n                            {`${s.name}`}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n                    <div>\r\n                      {presMeds.map((m, i) => (\r\n                        <div className=\"row\" key={i}>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"text\"\r\n                              disabled\r\n                              value={m.name}\r\n                              className=\"form-control\"\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"number\"\r\n                              min={1}\r\n                              max={m.count}\r\n                              placeholder=\"No of Medicines\"\r\n                              className=\"form-control col\"\r\n                              onChange={(ev) => {\r\n                                m.nos = ev.target.valueAsNumber;\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control col\"\r\n                              placeholder=\"Morning\"\r\n                              onChange={(ev) => {\r\n                                m.mrng = ev.target.valueAsNumber;\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control col\"\r\n                              placeholder=\"Afternoon\"\r\n                              onChange={(ev) => {\r\n                                m.noon = ev.target.valueAsNumber;\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control col\"\r\n                              placeholder=\"Evening\"\r\n                              onChange={(ev) => {\r\n                                m.evng = ev.target.valueAsNumber;\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"number\"\r\n                              className=\"form-control col\"\r\n                              placeholder=\"Night\"\r\n                              onChange={(ev) => {\r\n                                m.night = ev.target.valueAsNumber;\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </Fragment>\r\n                )}\r\n                {appt.isGrooming && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Grooming</label>\r\n                    <select\r\n                      name=\"petgroom\"\r\n                      title=\"Grooming\"\r\n                      className=\"form-control\"\r\n                      disabled\r\n                      multiple\r\n                    >\r\n                      {appt.groomings.map((s) => (\r\n                        <option\r\n                          className=\"text-capitalize\"\r\n                          value={s.id}\r\n                          key={s.id}\r\n                        >\r\n                          {`${s.name}`}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Patient Analysis</label>\r\n                  <textarea\r\n                    name=\"analysis\"\r\n                    className=\"form-control\"\r\n                    rows={3}\r\n                    value={analysis}\r\n                    onChange={(ev) => setAnalysis(ev.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Next Visit Time</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    value={nextTime}\r\n                    onChange={(ev) => setNextTime(ev.target.value)}\r\n                    min={new Date(appt.apptTime).toISOString().substr(0, 10)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(PetAppt);\r\n","import React, { useState, Fragment, useEffect } from \"react\";\r\n\r\n/* COMPONENT Import */\r\nimport Backdrop from \"../../../hoc-components/UI/backdrop/Backdrop\";\r\n\r\n/* CSS Import */\r\nimport \"./ApptHistory.css\";\r\nimport { getStaffPetAppointments } from \"../../../services/http.services\";\r\nimport AdminLayout from \"../../../hoc-components/UI/adminlayout/AdminLayout\";\r\nimport DataList from \"../../../hoc-components/UI/datalist/DataList\";\r\nimport { faHistory } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst ApptHistory: React.FC = () => {\r\n  const [petAppts, setPetAppts] = useState<Array<any>>([]);\r\n  const [isVerifying, setIsVerifying] = useState<boolean>(true);\r\n  const [isFetched, setIsFetched] = useState<boolean>(false);\r\n  const [appt, setAppt] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    async function getPetAppts() {\r\n      try {\r\n        const appts: any = await getStaffPetAppointments();\r\n        setPetAppts(appts);\r\n        setIsVerifying(false);\r\n      } catch (err) {\r\n        setIsVerifying(false);\r\n      } finally {\r\n        setIsFetched(true);\r\n      }\r\n    }\r\n\r\n    if (petAppts.length === 0 && !isFetched) {\r\n      getPetAppts();\r\n    }\r\n  });\r\n\r\n  const getMonths = (dob: string) => {\r\n    let diff = (new Date().getTime() - new Date(dob).getTime()) / 1000;\r\n    diff /= 60 * 60 * 24 * 7 * 4;\r\n    return Math.abs(Math.round(diff));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {isVerifying && <Backdrop message=\"Please wait for a while...\" />}\r\n      <DataList\r\n        dataLength={petAppts.length}\r\n        icon={faHistory}\r\n        placeholder=\"No history available\"\r\n      >\r\n        <div className=\"col-12 my-4\">\r\n          <div className=\"row\">\r\n            <div className=\"col-4\">\r\n              <h3>Appointment History</h3>\r\n              <table className=\"table table-bordered\">\r\n                <tbody>\r\n                  {petAppts\r\n                    .filter((p) => p.status === \"CLOSED\")\r\n                    .map((t, i) => (\r\n                      <tr key={t.id}>\r\n                        <td\r\n                          className={`cursor-pointer pet-select ${\r\n                            appt !== null && appt.id === t.id\r\n                              ? \"pet-select-focus\"\r\n                              : \"\"\r\n                          }`}\r\n                          onClick={() => {\r\n                            setAppt(t);\r\n                          }}\r\n                        >\r\n                          <strong>{`${i + 1}. ${\r\n                            t.pet.petName\r\n                          } (${t.pet.petCategory.name.toUpperCase()})`}</strong>\r\n                          <section>{\"Owner: \" + t.user.username}</section>\r\n                          <section>\r\n                            {\"Pet Age (in months): \" + getMonths(t.pet.dob)}\r\n                          </section>\r\n                          <section\r\n                            className=\"text-truncate\"\r\n                            style={{ width: \"300px\" }}\r\n                          >\r\n                            {t.reason}\r\n                          </section>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n            {appt && (\r\n              <div className=\"col-8\">\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">\r\n                    Reason for Appointment\r\n                  </label>\r\n                  <textarea\r\n                    name=\"reason\"\r\n                    className=\"form-control\"\r\n                    rows={3}\r\n                    value={appt.reason}\r\n                    disabled\r\n                  ></textarea>\r\n                </div>\r\n                {appt.isVaccine && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Vaccine</label>\r\n                    {JSON.parse(appt.tabletPrescribed).vaccine.map(\r\n                      (v: any, i: number) => (\r\n                        <div className=\"row\" key={i}>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              disabled\r\n                              value={v.name}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              disabled\r\n                              value={v.cost}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                {appt.isConsult && (\r\n                  <Fragment>\r\n                    <div className=\"form-group\">\r\n                      <label className=\"text-secondary\">Medicine</label>\r\n                      {JSON.parse(appt.tabletPrescribed).medicine.map(\r\n                        (v: any, i: number) => (\r\n                          <div className=\"row\" key={i}>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.medicine}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.count}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.mrng}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.noon}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.evng}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.ngt}\r\n                              />\r\n                            </div>\r\n                            <div className=\"form-group col\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                disabled\r\n                                value={v.cost}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      )}\r\n                    </div>\r\n                  </Fragment>\r\n                )}\r\n                {appt.isGrooming && (\r\n                  <div className=\"form-group\">\r\n                    <label className=\"text-secondary\">Grooming</label>\r\n                    {JSON.parse(appt.tabletPrescribed).grooming.map(\r\n                      (v: any, i: number) => (\r\n                        <div className=\"row\" key={i}>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              disabled\r\n                              value={v.name}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group col\">\r\n                            <input\r\n                              type=\"text\"\r\n                              className=\"form-control\"\r\n                              disabled\r\n                              value={v.cost}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )}\r\n                  </div>\r\n                )}\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Patient Analysis</label>\r\n                  <textarea\r\n                    name=\"analysis\"\r\n                    className=\"form-control\"\r\n                    rows={3}\r\n                    value={appt.consultDetail || \"\"}\r\n                    disabled\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"text-secondary\">Next Visit Time</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    value={appt.nextVisitSuggest.substr(0, 10)}\r\n                    disabled\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </DataList>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AdminLayout(ApptHistory);\r\n","import React, { Fragment } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n/* TS Import */\r\nimport {\r\n  URL_PET_STAFF,\r\n  URL_PET_STAFF_APPT,\r\n  URL_PET_STAFF_APPT_HISTORY,\r\n} from \"../../config/UrlRoute\";\r\n\r\n/* COMPONENT Import */\r\nimport { RootState } from \"../../store/reducers\";\r\nimport { toggleSidebar } from \"../../store/actions\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { joinArrayToString } from \"../../utils/array.utils\";\r\n\r\nimport Error from \"../../hoc-components/error/Error\";\r\nimport StaffHeader from \"./header/StaffHeader\";\r\nimport PetAppt from \"./petappt/PetAppt\";\r\nimport ApptHistory from \"./appthistory/ApptHistory\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  showSidebar: state.sidebar,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  toggleSidebar,\r\n});\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst PetStaff: React.FC<Props> = (props) => (\r\n  <Fragment>\r\n    <div className={\"p-0 col-md-2\"}>\r\n      <StaffHeader />\r\n    </div>\r\n    <div\r\n      className={joinArrayToString([\r\n        \"p-0 overflow-hidden px-0\",\r\n        props.showSidebar ? \"col-md-9\" : \"col-md-8\",\r\n      ])}\r\n    >\r\n      <Switch>\r\n        <Redirect path={URL_PET_STAFF} to={URL_PET_STAFF_APPT} exact />\r\n        <Route path={URL_PET_STAFF_APPT}>\r\n          <PetAppt />\r\n        </Route>\r\n        <Route path={URL_PET_STAFF_APPT_HISTORY}>\r\n          <ApptHistory />\r\n        </Route>\r\n        <Route path=\"**\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  </Fragment>\r\n);\r\n\r\nexport default connector(PetStaff);\r\n","import React, { useEffect } from \"react\";\r\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { RootState } from \"../../store/reducers\";\r\nimport {\r\n  URL_PET_ADMIN,\r\n  URL_PET_PASSWORD,\r\n  URL_PET_PROFILE,\r\n  URL_PET_STAFF,\r\n  URL_PET_USERS,\r\n} from \"../../config/UrlRoute\";\r\nimport PetAdmin from \"../admin/PetAdmin\";\r\nimport Error from \"../../hoc-components/error/Error\";\r\nimport { joinArrayToString } from \"../../utils/array.utils\";\r\nimport Header from \"../nav/header/Header\";\r\nimport UserProfile from \"../admin/userprofile/UserProfile\";\r\nimport Password from \"../admin/password/Password\";\r\nimport { toggleSidebar } from \"../../store/actions\";\r\nimport PetClient from \"../client/PetClient\";\r\nimport PetStaff from \"../staff/PetStaff\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  user: state.auth,\r\n  showSidebar: state.sidebar,\r\n});\r\n\r\nconst connector = connect(mapStateToProps, {\r\n  toggleSidebar,\r\n});\r\n\r\ntype PropsFromRedux = ConnectedProps<typeof connector>;\r\n\r\ntype Props = PropsFromRedux & {\r\n  toggleSidebar: (toggle: boolean) => void;\r\n};\r\n\r\nconst Home: React.FC<Props> = (props) => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const userRole = props.user.role;\r\n    if (userRole === \"ROLE_ADMIN\") {\r\n      history.push(URL_PET_ADMIN);\r\n    } else if (\r\n      userRole === \"ROLE_VETERINARIAN\" ||\r\n      userRole === \"ROLE_GROOMING\"\r\n    ) {\r\n      history.push(URL_PET_STAFF);\r\n    } else {\r\n      history.push(URL_PET_USERS);\r\n    }\r\n  }, [props.user.role]);\r\n\r\n  return (\r\n    <div className=\"d-flex flex-row h-100\">\r\n      <div\r\n        className={joinArrayToString([\r\n          \"p-0\",\r\n          props.showSidebar ? \"col-md-1\" : \"col-md-2\",\r\n        ])}\r\n      >\r\n        <Header toggleSidebar={(toggle) => props.toggleSidebar(toggle)} />\r\n      </div>\r\n\r\n      <Switch>\r\n        <Redirect from=\"/home\" to={URL_PET_PROFILE} exact />\r\n        <Route path={URL_PET_ADMIN}>\r\n          <PetAdmin />\r\n        </Route>\r\n        <Route path={URL_PET_STAFF}>\r\n          <PetStaff />\r\n        </Route>\r\n        <Route path={URL_PET_USERS}>\r\n          <PetClient />\r\n        </Route>\r\n        <Route path={URL_PET_PROFILE}>\r\n          <UserProfile />\r\n        </Route>\r\n        <Route path={URL_PET_PASSWORD}>\r\n          <Password />\r\n        </Route>\r\n        <Route path=\"**\">\r\n          <Error />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connector(Home);\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\n\r\n/* COMPONENT Import */\r\nimport Login from \"./components/login/Login\";\r\nimport Error from \"./hoc-components/error/Error\";\r\nimport GuardedRoute from \"./hoc-components/guard/GuardedRoute\";\r\n\r\n/* JS/TS Import */\r\nimport { URL_LOGIN, URL_SIGNUP, URL_PET_HOME } from \"./config/UrlRoute\";\r\nimport { RootState } from \"./store/reducers\";\r\nimport Signup from \"./components/signup/Signup\";\r\nimport Home from \"./components/home/Home\";\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  token: state.auth.accessToken,\r\n});\r\n\r\nconst connector = connect(mapStateToProps);\r\n\r\ntype Props = ConnectedProps<typeof connector>;\r\n\r\nconst App: React.FC<Props> = (props) => (\r\n  <Switch>\r\n    <Redirect from=\"/\" to={URL_LOGIN} exact />\r\n    <Route path={URL_LOGIN}>\r\n      <Login />\r\n    </Route>\r\n    <Route path={URL_SIGNUP}>\r\n      <Signup />\r\n    </Route>\r\n    <GuardedRoute\r\n      component={Home}\r\n      isAuthenticated={props.token !== \"\"}\r\n      path={URL_PET_HOME}\r\n    />\r\n    <Route path=\"**\">\r\n      <Error />\r\n    </Route>\r\n  </Switch>\r\n);\r\n\r\nexport default connector(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport axios from \"axios\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n/* JS Import */\r\nimport \"jquery/dist/jquery.min.js\";\r\nimport \"popper.js/dist/umd/popper.min.js\";\r\nimport \"bootstrap/dist/js/bootstrap.min.js\";\r\n\r\n/* CSS Import */\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./index.css\";\r\nimport { Auth } from \"./services/auth.services\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_ApiUrl;\r\n\r\naxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.message && error.message.includes(\"401\")) {\r\n      console.log(\"call the refresh token api here\");\r\n    }\r\n    Auth.signOut();\r\n    window.location.reload();\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <HashRouter basename=\"/\">\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    </HashRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}